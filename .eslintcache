[{"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\index.js":"1","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\App.js":"2","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\Header.js":"3","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\global.js":"4","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\theme.js":"5","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Login\\Login.js":"6","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Login\\LoginCreate.js":"7","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Login\\LoginForm.js":"8","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Login\\LoginPasswordReset.js":"9","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Login\\LoginPasswordLost.js":"10","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Input.js":"11","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Alertas\\AlertSucess.js":"12","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\index.js":"13","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Burger\\index.js":"14","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Menu\\index.js":"15","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Burger\\Burger.js":"16","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Menu\\Menu.js":"17","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Menu\\Menu.styled.js":"18","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Burger\\Burger.styled.js":"19","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\hooks.js":"20","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Acordeao.js":"21","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\Diploma.js":"22","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Modal\\ModalConfirmarExclusao.js":"23","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Alertas\\AlertError.js":"24","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Modal\\ModalEditar.js":"25","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\IncluirCadastroDiploma.js":"26","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Select.js":"27","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\RadioECheckbox\\Checkbox.js":"28","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\HomeScreen.js":"29","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\Curso.js":"30","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\IncluirCadastroInstituicao.js":"31","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\CursoOfertado.js":"32","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\Instituicao.js":"33","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Operacoes\\LivroRegistro.js":"34","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Consultas\\Diplomas.js":"35","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Ferramentas\\ManutencaoDiploma.js":"36","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Ferramentas\\ManutencaoDiplomaAlterar.js":"37","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Consultas\\DiplomaVisualizar.js":"38","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Textarea.js":"39","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\IncluirCursoOfertado.js":"40","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\IncluirCadastroCurso.js":"41","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Operacoes\\AnaliseDiploma.js":"42"},{"size":267,"mtime":1610590393676,"results":"43","hashOfConfig":"44"},{"size":3879,"mtime":1610908541796,"results":"45","hashOfConfig":"44"},{"size":515,"mtime":1610835560911,"results":"46","hashOfConfig":"44"},{"size":770,"mtime":1610740054709,"results":"47","hashOfConfig":"44"},{"size":138,"mtime":1610733998390,"results":"48","hashOfConfig":"44"},{"size":677,"mtime":1610592054298,"results":"49","hashOfConfig":"44"},{"size":3167,"mtime":1610739309113,"results":"50","hashOfConfig":"44"},{"size":2500,"mtime":1610739823130,"results":"51","hashOfConfig":"44"},{"size":176,"mtime":1610592054297,"results":"52","hashOfConfig":"44"},{"size":2296,"mtime":1610738954079,"results":"53","hashOfConfig":"44"},{"size":801,"mtime":1610653276538,"results":"54","hashOfConfig":"44"},{"size":683,"mtime":1610728582743,"results":"55","hashOfConfig":"44"},{"size":90,"mtime":1610599965942,"results":"56","hashOfConfig":"44"},{"size":36,"mtime":1592479613000,"results":"57","hashOfConfig":"44"},{"size":34,"mtime":1592479613000,"results":"58","hashOfConfig":"44"},{"size":426,"mtime":1610644567459,"results":"59","hashOfConfig":"44"},{"size":926,"mtime":1610905861628,"results":"60","hashOfConfig":"44"},{"size":972,"mtime":1610653553803,"results":"61","hashOfConfig":"44"},{"size":1011,"mtime":1610652203242,"results":"62","hashOfConfig":"44"},{"size":482,"mtime":1610601903789,"results":"63","hashOfConfig":"44"},{"size":4771,"mtime":1610905426974,"results":"64","hashOfConfig":"44"},{"size":20694,"mtime":1610909933712,"results":"65","hashOfConfig":"44"},{"size":792,"mtime":1610591916587,"results":"66","hashOfConfig":"44"},{"size":581,"mtime":1610728599300,"results":"67","hashOfConfig":"44"},{"size":573,"mtime":1610649809722,"results":"68","hashOfConfig":"44"},{"size":12839,"mtime":1610904500269,"results":"69","hashOfConfig":"44"},{"size":788,"mtime":1610591983034,"results":"70","hashOfConfig":"44"},{"size":156,"mtime":1610591943403,"results":"71","hashOfConfig":"44"},{"size":686,"mtime":1610837606213,"results":"72","hashOfConfig":"44"},{"size":8346,"mtime":1610902284236,"results":"73","hashOfConfig":"44"},{"size":14792,"mtime":1610893352868,"results":"74","hashOfConfig":"44"},{"size":9475,"mtime":1610842522908,"results":"75","hashOfConfig":"44"},{"size":8267,"mtime":1610840309775,"results":"76","hashOfConfig":"44"},{"size":2028,"mtime":1610734932425,"results":"77","hashOfConfig":"44"},{"size":7275,"mtime":1610901545120,"results":"78","hashOfConfig":"44"},{"size":7223,"mtime":1610840214518,"results":"79","hashOfConfig":"44"},{"size":19869,"mtime":1610840227613,"results":"80","hashOfConfig":"44"},{"size":13007,"mtime":1610902574415,"results":"81","hashOfConfig":"44"},{"size":633,"mtime":1610591959906,"results":"82","hashOfConfig":"44"},{"size":12358,"mtime":1610893957214,"results":"83","hashOfConfig":"44"},{"size":9037,"mtime":1610904546846,"results":"84","hashOfConfig":"44"},{"size":10653,"mtime":1610909982683,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"pym7jp",{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"88"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"88"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"88"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\index.js",[],["194","195"],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\App.js",["196","197"],"import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyles } from './global';\r\nimport { theme } from './theme';\r\nimport { Burger, Menu } from './components';\r\nimport { useOnClickOutside } from './hooks';\r\nimport Header from './Header';\r\nimport Login from './components/Login/Login';\r\nimport HomeScreen from './components/HomeScreen';\r\nimport Diploma from './components/Cadastros/Diploma';\r\nimport IncluirCadastroDiploma from './components/Cadastros/IncluirCadastroDiploma';\r\nimport Curso from './components/Cadastros/Curso';\r\nimport Diplomas from './components/Consultas/Diplomas';\r\nimport LivroRegistro from './components/Operacoes/LivroRegistro';\r\nimport DiplomaVisualizar from './components/Consultas/DiplomaVisualizar';\r\nimport LoginCreate from './components/Login/LoginCreate';\r\nimport ManutencaoDiploma from './components/Ferramentas/ManutencaoDiploma';\r\nimport ManutencaoDiplomaAlterar from './components/Ferramentas/ManutencaoDiplomaAlterar';\r\nimport Instituicao from './components/Cadastros/Instituicao';\r\nimport IncluirCadastroInstituicao from './components/Cadastros/IncluirCadastroInstituicao';\r\nimport CursoOfertado from './components/Cadastros/CursoOfertado';\r\nimport IncluirCursoOfertado from './components/Cadastros/IncluirCursoOfertado';\r\nimport IncluirCadastroCurso from './components/Cadastros/IncluirCadastroCurso';\r\nimport AnaliseDiploma from './components/Operacoes/AnaliseDiploma';\r\n\r\nconst App = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const node = React.useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <>\r\n        <GlobalStyles gi/>\r\n        <BrowserRouter>\r\n          <Header></Header>\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomeScreen></HomeScreen>} />\r\n            {/* <Route path=\"/\" element={<Login />} /> */}\r\n            <Route path=\"/login/*\" element={<Login></Login>} />\r\n            <Route path=\"/cadastro/diploma\" element={<Diploma></Diploma>} />\r\n            <Route path=\"/cadastro/instituicao\" element={<Instituicao></Instituicao>} />\r\n            <Route path=\"/cadastro/incluirCadastroInstituicao\" element={<IncluirCadastroInstituicao></IncluirCadastroInstituicao>} />\r\n            {/* <Route path=\"/cadastro/incluirCadastroDiploma\" element={<IncluirCadastroDiploma></IncluirCadastroDiploma>} /> */}\r\n            <Route path=\"/cadastro/curso\" element={<Curso></Curso>} />\r\n            <Route path=\"/cadastro/cursoOfertado\" element={<CursoOfertado></CursoOfertado>} />\r\n            <Route path=\"/cadastro/incluirCursoOfertado\" element={<IncluirCursoOfertado></IncluirCursoOfertado>} />\r\n            <Route path=\"/cadastro/incluirCurso\" element={<IncluirCadastroCurso></IncluirCadastroCurso>} />\r\n            <Route path=\"/consulta/diplomas\" element={<Diplomas></Diplomas>} />\r\n            <Route path=\"/consulta/diplomas/visualizar\" element={<DiplomaVisualizar></DiplomaVisualizar>} />\r\n            <Route path=\"/ferramentas/manutencaoDiploma/alterar\" element={<ManutencaoDiplomaAlterar></ManutencaoDiplomaAlterar>} />\r\n            <Route path=\"/ferramentas/manutencaoDiploma\" element={<ManutencaoDiploma></ManutencaoDiploma>} />\r\n            <Route path=\"/operacoes/livroRegistro\" element={<LivroRegistro></LivroRegistro>} />\r\n            <Route path=\"/operacoes/analiseDiploma\" element={<AnaliseDiploma></AnaliseDiploma>} />\r\n            <Route path=\"/ferramentas/manutencaoDiploma\" element={<ManutencaoDiploma></ManutencaoDiploma>} />\r\n          </Routes>\r\n          <div ref={node}>\r\n            <Burger open={open} setOpen={setOpen} />\r\n            <Menu open={open} setOpen={setOpen} />\r\n          </div>\r\n        </BrowserRouter>\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\Header.js",["198"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FaUser } from \"react-icons/fa\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n\r\n    <header className=\"mb-2 mt-4 \">\r\n      <nav  className=\"mt-2  nav justify-content-end\">\r\n  <Link className=\" mr-3 mb-5 mt-2 linkLogin \" to=\"/login\">Login / Criar</Link> \r\n  <FaUser className='user mr-5 mt-2 ' size='2rem' alt=\"Usuario\"></FaUser>\r\n \r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\global.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\theme.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Login\\Login.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Login\\LoginCreate.js",["199","200"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './LoginForm.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Input from '../Form/Input';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\n\r\nconst LoginCreate = () => {\r\n    const [name, setName] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showAlertSucess, setShowAlertSucess] = React.useState(false);\r\n    const [showAlertError, setShowAlertError] = React.useState(false);\r\n    const navigate = useNavigate();\r\n    const handleComeBack = () => navigate('/login');\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container animeLeft \">\r\n            <div class='titleGrid'><h1 className=\"mt-2 login title\" >Cadastre-se</h1></div>\r\n            <div className='content' >\r\n                \r\n            {showAlertSucess && <AlertSucess texto='Seu Cadastro foi Criado com Sucesso !' show={showAlertSucess} className='col-md-12' onClick={() => setShowAlertSucess(false)}></AlertSucess>} \r\n               {showAlertError && <AlertError texto='Houve um Erro na Criação do Seu Cadastro !'  show={showAlertError} className='col-md-12'  onClick={() => setShowAlertError(false)}></AlertError>} \r\n\r\n                <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n                    <Form.Row>\r\n                        <Input lg=\"12\" label='Nome' name='name' size='lg' register={register({ required: true })} value={name} type='text' textoErro={errors.name && \"Campo Nome é obrigatório\"} onChange={(event) => setName(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Input lg=\"12\" label='Email' name='email' size='lg' register={register({ required: true })} value={name} type='email' textoErro={errors.email && \"Campo Email é obrigatório\"} onChange={(event) => setEmail(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Input lg=\"12\" label='Senha' name='password' size='lg' register={register({ required: true })} value={password} type='password' textoErro={errors.password && \"Campo Senha é obrigatório\"} onChange={(event) => setPassword(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    {loading ? (<Button disabled className=\" mr-2 mt-3\" size='lg' variant=\"primary\" type=\"submit\"> Cadastrando...</Button>\r\n                    ) : (<Button className=\" mr-2 mt-3\" size='lg' variant=\"primary\" type=\"submit\"> Cadastrar </Button>)}\r\n                    <Button className=\" mt-3 \" size='lg' variant=\"secondary\" onClick={handleComeBack} >Voltar</Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginCreate;\r\n\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Login\\LoginForm.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Login\\LoginPasswordReset.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Login\\LoginPasswordLost.js",["201"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './LoginForm.css';\r\nimport Input from '../Form/Input';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\n\r\n\r\nconst LoginPasswordLost = () => {\r\n    const [email, setEmail] = React.useState('');\r\n    const [loading, setLoading] = React.useState('');\r\n    const [showAlertSucess, setShowAlertSucess] = React.useState(true);\r\n    const [showAlertError, setShowAlertError] = React.useState(false);\r\n\r\n    const handleAlertSucess = () => showAlertSucess(true);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        setLoading(true);\r\n        console.log(data);\r\n        setTimeout(function () { setShowAlertSucess(true) }, 1000);\r\n        setTimeout(function () { setLoading(false) }, 1100);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container animeLeft \">\r\n            <div class='titleGrid'><h1 className=\"mt-2 login title\" >Esqueceu a senha?</h1></div>\r\n            <div className='content' >\r\n\r\n                {showAlertSucess && <AlertSucess texto='Email Enviado com sucesso !' show={showAlertSucess} className='col-md-12' onClick={() => setShowAlertSucess(false)}></AlertSucess>} \r\n               {showAlertError && <AlertError texto='Erro no Envio do Email !'  show={showAlertError} className='col-md-12'  onClick={() => setShowAlertError(false)}></AlertError>} \r\n   \r\n\r\n                <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-4 \">\r\n                    <Form.Row>\r\n                        <Input lg=\"12\" label='Email' name='email' size='lg' register={register({ required: true })} value={email} type='email' placeholder=\"Seu email\" textoErro={errors.email && \"Campo email é obrigatório\"} onChange={(event) => setEmail(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    {loading ? (<Button disabled variant=\"primary\" type=\"submit\"> Enviando...</Button>)\r\n                        : (<Button variant=\"primary\" type=\"submit\"> Enviar Email </Button>)}\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPasswordLost;\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Input.js",["202"],"import React from 'react'\r\n// import { useForm } from \"react-hook-form\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\n\r\nconst Input = ({ lg, label, value, register, name, className, ref, placeholder, type, size, onChange, textoErro }) => {\r\n    // const { register, handleSubmit, errors } = useForm();\r\n    // const onSubmit = data => console.log(data);\r\n    return (\r\n        <Form.Group as={Col} lg={lg} >\r\n            <Form.Label>{label}</Form.Label>\r\n            <Form.Control className={className} ref={ref} size ={size} value={value} ref={register} name={name} placeholder={placeholder} type={type} onChange={onChange} />\r\n            <Form.Text className='error'><p>{textoErro}</p></Form.Text>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Alertas\\AlertSucess.js",["203"],"import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {RiCloseCircleLine} from \"react-icons/ri\";\r\n\r\nconst AlertSucess = ({texto, show, onClick, lg, className}) => {\r\n       return (\r\n        <Alert className={className } variant=\"success\" show={show}  lg={lg}> <strong><h3> {texto}</h3></strong><hr></hr><div className=\"d-flex justify-content-end\">\r\n          <RiCloseCircleLine size='2em' onClick={onClick} variant=\"outline-success\"> </RiCloseCircleLine> </div>\r\n        {/* <Button onClick={onClick} variant=\"outline-success\"> Fechar</Button> </div> */}\r\n      </Alert>\r\n    )\r\n}\r\n\r\nexport default AlertSucess\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\index.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Burger\\index.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Menu\\index.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Burger\\Burger.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Menu\\Menu.js",["204","205","206","207","208","209","210"],"import React from 'react';\r\nimport { bool } from 'prop-types';\r\nimport { StyledMenu } from './Menu.styled';\r\nimport { Link } from 'react-router-dom';\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { MdAdd, MdRemove } from \"react-icons/md\";\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Acordeao from '../Acordeao';\r\nimport {  FaUserGraduate } from \"react-icons/fa\";\r\n// FaGraduationCap\r\n// FaUserGraduate\r\n\r\nconst Menu = ({ open }) => {\r\n  return (\r\n    <StyledMenu open={open}>\r\n       {/* <div className=\"mb-8 acima\"> */}\r\n       <div className='diploma'><FaUserGraduate color='#c32b3f' size='2rem' style={{ marginTop: '100px' }} className='ml-1' ></FaUserGraduate></div>\r\n  <Acordeao></Acordeao>\r\n\r\n {/* </div> */}\r\n    </StyledMenu>\r\n  )\r\n}\r\nMenu.propTypes = {\r\n  open: bool.isRequired,\r\n}\r\nexport default Menu;","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Menu\\Menu.styled.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Burger\\Burger.styled.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\hooks.js",["211"],"import React from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  React.useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener('mousedown', listener);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener);\r\n    };\r\n  },\r\n  [ref, handler],\r\n  );\r\n};\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Acordeao.js",["212"],"import React from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { MdAdd, MdRemove } from \"react-icons/md\";\r\nimport { Link } from 'react-router-dom';\r\nimport {GrDocumentTransfer } from \"react-icons/gr\";\r\nimport { FaCashRegister, FaRegListAlt} from \"react-icons/fa\";\r\nimport { RiToolsFill } from \"react-icons/ri\";\r\nimport { BiTransfer } from \"react-icons/bi\";\r\n\r\nconst Acordeao = () => {\r\n    const [accordion1, setAcordion1] = React.useState(true);\r\n    const [accordion2, setAcordion2] = React.useState(true);\r\n    const [accordion3, setAcordion3] = React.useState(true);\r\n    const [accordion4, setAcordion4] = React.useState(true);\r\n    return (\r\n        <Accordion className=' mr-2 ' style={{  marginTop:'10px'}}>\r\n            <Card style={{ borderWidth: '5px', backgroundColor: '#3c6178'}}>\r\n                <Card.Header >\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" onClick={() => setAcordion1(!accordion1)} style={{ color: '#FFFFFF' , fontSize:'18px'}}  >\r\n                      <FaCashRegister className='mr-2 mb-1'></FaCashRegister>  Cadastros {accordion1 ? (<MdAdd className='ml-3'></MdAdd>) : (<MdRemove className='ml-3'></MdRemove>)}\r\n\r\n                    </Accordion.Toggle >\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body className='ml-4'>\r\n                        <div > <Link className='link' to=\"/cadastro/diploma\">Diploma</Link></div>  \r\n                        <hr></hr>\r\n                        <div ><Link className='link' to=\"/cadastro/instituicao\">Instituição</Link></div>\r\n                        <hr></hr>\r\n                        <div ><Link className='link' to=\"/cadastro/curso\">Curso</Link></div>\r\n                        <hr></hr>\r\n                        <div ><Link className='link' to=\"/cadastro/cursoOfertado\">Curso Ofertado</Link></div>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            <Card style={{ borderWidth: '5px', backgroundColor: '#3c6178' }}>\r\n                <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\" onClick={() => setAcordion2(!accordion2)} style={{ color: '#FFFFFF', fontSize:'18px' }}>\r\n                     <BiTransfer className='mr-2' ></BiTransfer>   Operações{accordion2 ? (<MdAdd className='ml-3'></MdAdd>) : (<MdRemove className='ml-3'></MdRemove>)}\r\n                    </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body className='ml-3'>\r\n                        <Link className='link' to=\"/operacoes/livroRegistro\">Livro Registro</Link>\r\n                        <hr></hr>\r\n                        <Link className='link' to=\"/operacoes/analiseDiploma\">Análise Diploma</Link>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            <Card style={{ borderWidth: '5px', backgroundColor: '#3c6178' }}>\r\n                <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\" onClick={() => setAcordion3(!accordion3)} style={{ color: '#FFFFFF', fontSize:'18px' }}>\r\n                     <FaRegListAlt className='mr-2'></FaRegListAlt>   Consultas {accordion3 ? (<MdAdd className='ml-3'></MdAdd>) : (<MdRemove className='ml-3'></MdRemove>)}\r\n                    </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body className='ml-3'>\r\n                        <Link className='link' to=\"/consulta/diplomas\">Diplomas</Link>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            <Card style={{ borderWidth: '5px', backgroundColor: '#3c6178' }}>\r\n                <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\" onClick={() => setAcordion4(!accordion4)} style={{ color: '#FFFFFF', fontSize:'18px'}}>\r\n                      <RiToolsFill className='mr-2'></RiToolsFill>  Ferramentas {' '} \r\n                        {accordion4 ? (<MdAdd className='ml-2'></MdAdd>) : (<MdRemove className='ml-2'></MdRemove>)}\r\n                    </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"3\">\r\n                    <Card.Body className='ml-3'>\r\n                        <Link className='link' to=\"/ferramentas/manutencaoDiploma\">Manutenção de Diploma</Link>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n\r\n    )\r\n}\r\n\r\nexport default Acordeao\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\Diploma.js",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232"],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Modal\\ModalConfirmarExclusao.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Alertas\\AlertError.js",["233"],"\r\nimport React from 'react'\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {RiCloseCircleLine} from \"react-icons/ri\";\r\n\r\nconst AlertError = ({texto, show, onClick, lg, className}) => {\r\n    return (\r\n        <Alert className={className }show={show} variant=\"danger\" lg={lg}> <strong><h3> {texto}</h3></strong><hr></hr><div className=\"d-flex justify-content-end\">\r\n        <RiCloseCircleLine size='2em' onClick={onClick} variant=\"outline-danger\"> </RiCloseCircleLine> </div>\r\n      </Alert>\r\n    )\r\n}\r\n\r\nexport default AlertError\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Modal\\ModalEditar.js",["234"],"import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction ModalEditarCadastro({show, onHide, className,  children, texto}) {\r\n    return (\r\n        <Modal  size=\"lg\" show={show} onHide={onHide} backdrop=\"static\" keyboard={false}  >\r\n\r\n        <Modal.Header closeButton>\r\n    <Modal.Title className={className}>{texto}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n         {children}\r\n        </Modal.Body>\r\n\r\n      \r\n\r\n      </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalEditarCadastro\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\IncluirCadastroDiploma.js",["235","236","237","238","239","240","241","242","243","244","245","246"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\n// import Alert from 'react-bootstrap/Alert';\r\nimport { FaGenderless } from 'react-icons/fa';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Acordeao from '../Acordeao';\r\nimport useMaskInput from 'use-mask-input';\r\nimport Input from '../Form/Input';\r\nimport Checkbox from '../Form/RadioECheckbox/Checkbox'\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\nimport Select from '../Form/Select';\r\n\r\n// falta o restante do formulario !!!\r\n\r\nconst IncluirCadastroDiploma = () => {\r\n  const [cpf, setCpf] = React.useState('');\r\n  const [rg, setRg] = React.useState('');\r\n  const [name, setName] = React.useState('');\r\n  const [gender, setGender] = React.useState('');\r\n  const [nameFather, setNameFather] = React.useState([]);\r\n  const [nameMother, setNameMother] = React.useState('');\r\n  const [country, setCountry] = React.useState('');\r\n  const [state, setState] = React.useState('');\r\n  const [city, setCity] = React.useState('');\r\n  const [dateBirth, setDateBirth] = React.useState('');\r\n  const [institution, setInstitution] = React.useState('');\r\n  const [courseCode, setCourseCode] = React.useState('');\r\n  const [level, setLevel] = React.useState('');\r\n  const [modality, setModality] = React.useState('');\r\n  const [type, setType] = React.useState('');\r\n  const [copyRegistration, setCopyRegistration] = React.useState('nao');\r\n  const [foreignDocument, setForeignDocument] = React.useState('sim');\r\n  const [semesterYearConclusion, setSemesterYearConclusion] = React.useState('');\r\n  const [dateGraduation, setDateGraduation] = React.useState('');\r\n  const [dateDispatch, setDateDispatch] = React.useState('');\r\n  const [inclusionDate, setInclusionDate] = React.useState('');\r\n  // const [showAlert, setShowAlert] = React.useState(false);\r\n  // const [showAlertErro, setShowAlertErro] = React.useState(false);\r\n  const [showAlertSucessInclude, setShowAlertSucessInclude] = React.useState(false);\r\n  const [showAlertErrorInclude, setShowAlertErrorInclude] = React.useState(false);\r\n  const [loading, setLoading] = React.useState('');\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const navigate = useNavigate();\r\n\r\n  // simulando dados do banco \r\n  const [dados, setDados] = React.useState([\r\n    { id: '1', name: 'luk', instituição: 'UEMG', data: '01/05/10' }\r\n  ]);\r\n\r\n  const handleBack = () => navigate('/cadastro/diploma');\r\n  const onSubmit = (data) => console.log(data);\r\n  const maskedCPFRef = useMaskInput({\r\n    mask: ['999.999.999-99'],\r\n    register: register({ required: true }),\r\n  })\r\n\r\n  const handleCheckedType = ({ target }) => setType(target.checked);\r\n\r\n\r\n  return (\r\n    <div className=\"row justify-content-end container animeLeft\">\r\n      <div className=\"col-10\">\r\n        <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Cadastro de Diplomas</h1></div>\r\n\r\n        <div className='content' >\r\n          {/* {showAlert && <AlertSucess texto='Registro incluído com sucesso !' className='col-md-12'  ></AlertSucess>} */}\r\n          {showAlertSucessInclude && <AlertSucess texto='Registro Incluído com Sucesso !' show={showAlertSucessInclude} className='col-md-10' onClick={() => setShowAlertSucessInclude(false)}></AlertSucess>}\r\n          {showAlertErrorInclude && <AlertError texto='Erro na Inclusão do Registro !' show={showAlertErrorInclude} className='col-md-10' onClick={() => setShowAlertErrorInclude(false)}></AlertError>}\r\n          <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5\">\r\n            <Form.Row>\r\n              <Input lg=\"5\" label='CPF' name='cpf' size='lg' register={maskedCPFRef} value={cpf} type='text' placeholder=\" Número do CPF\" textoErro={errors.cpf && \"Campo Cpf é obrigatório\"} onChange={(event) => setCpf(event.target.value)}></Input>\r\n              <Input lg=\"5\" label='RG' name='rg' size='lg' register={register({ required: true })} value={rg} type='text' placeholder=\" Número do RG\" textoErro={errors.rg && \"Campo RG é obrigatório\"} onChange={(event) => setRg(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input lg=\"10\" label='Nome do Aluno' size='lg' name='name' register={register({ required: true })} value={name} type='text' placeholder='Nome do Aluno' textoErro={errors.name && \"Campo Nome do Aluno é obrigatória\"} onChange={(event) => setName(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Label className=\"mr-3\" >Sexo</Form.Label>\r\n            <Form.Check type='radio' inline ref={register({ required: true })} name='gender' value=\"feminino\" checked={gender === 'feminino'} onChange={({ target }) => setGender(target.value)} label='Feminino' />{' '}\r\n            <Form.Check type='radio' inline ref={register({ required: true })} name='gender' value=\"masculino\" checked={gender === 'masculino'} onChange={({ target }) => setGender(target.value)} label='Masculino' />\r\n            <Form.Text className='error'><p>{errors.gender && \"Campo Sexo é obrigatório\"}</p></Form.Text>\r\n\r\n            <Form.Row className=''>\r\n              <Input lg=\"10\" label='Nome do Pai' size='lg' name=\"nameFather\" register={register({ required: true })} value={nameFather} type='text' placeholder='Nome do Aluno' textoErro={errors.nameFather && \"Campo Nome do Pai é obrigatório\"} onChange={(event) => setNameFather(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row className=''>\r\n              <Input lg=\"10\" label='Nome da Mãe' size='lg' name=\"nameMother\" register={register({ required: true })} value={nameMother} type='text' placeholder='Nome da Mãe' textoErro={errors.nameMother && \"Campo Mãe é obrigatório\"} onChange={(event) => setNameMother(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Select lg='5' size='lg' label='País' value={country} name='country' register={register({ required: true })} options={['Brasil', 'Português']} textoErro={errors.country && \"Campo País é obrigatório\"} onChange={({ target }) => setCountry(target.value)}></Select>\r\n              <Select lg='5' size='lg' label='Estado' value={state} name='state' register={register({ required: true })} options={['BH', 'Rio']} textoErro={errors.state && \"Campo Estado é obrigatório\"} onChange={({ target }) => setState(target.value)}></Select>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Select lg='5' size='lg' label='Cidade' value={city} name='city' register={register({ required: true })} options={['BH', 'Rio']} textoErro={errors.city && \"Campo Cidade é obrigatório\"} onChange={({ target }) => setCity(target.value)}></Select>\r\n              <Input size='lg' lg=\"5\" label='Data de Nascimento' value={dateBirth} name='dateBirth' register={register({ required: true })} type='date' textoErro={errors.initialDate && \"Data de Nascimento é Obrigatório\"} onChange={(event) => setDateBirth(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg='10' label='Instituição' name='institution' value={institution} type='text' register={register({ required: true })} textoErro={errors.institution && \"Nome do Instituição é obrigatório\"} placeholder='Nome do aluno' onChange={(event) => setInstitution(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg='10' label='Curso' name='name' value={name} type='text' register={register({ required: true })} textoErro={errors.name && \"Nome do Curso é obrigatório\"} placeholder='Nome do Curso' onChange={(event) => setName(event.target.value)}></Input>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Select lg='5' size='lg' label='Grau do curso' value={level} name='level' register={register({ required: true })} options={['Graduação', 'Pós Graduação', 'Apostila']} textoErro={errors.level && \"Campo Grau do Curso  é obrigatório\"} onChange={({ target }) => setLevel(target.value)}></Select>\r\n              <Select lg='5' size='lg' label='Habilitacao' value={modality} name='modality' register={register({ required: true })} options={['Bacheralado', 'Licenciatura', 'Tecnólogo']} textoErro={errors.modality && \"Campo Habilitação é obrigatório\"} onChange={({ target }) => setModality(target.value)}></Select>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} lg=\"10\">\r\n                <Form.Label className='mr-3'>Tipo</Form.Label>\r\n                <Form.Check inline type='checkbox' ref={register({ required: false })} name='type' value=\"type\" onChange={handleCheckedType} label='Apostilamento' />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Label className='mr-3' >Registro de 2º Via</Form.Label>\r\n            <Form.Check type='radio' inline ref={register({ required: true })} name='copyRegistration' value=\"nao\" checked={copyRegistration === 'nao'} onChange={({ target }) => setCopyRegistration(target.value)} label='Não' />\r\n            <Form.Check type='radio' inline ref={register({ required: true })} name='copyRegistration' value=\"sim\" checked={copyRegistration === 'sim'} onChange={({ target }) => setCopyRegistration(target.value)} label='Sim' />\r\n            <Form.Text className='error'><p>{errors.copyRegistration && \"Campo Sexo é obrigatório\"}</p></Form.Text>\r\n\r\n            <Form.Label className='mr-2'>Documento Estrangeiro</Form.Label>\r\n            <Form.Check type='radio' inline ref={register({ required: true })} name='foreignDocument' value=\"nao\" checked={foreignDocument === 'nao'} onChange={({ target }) => setForeignDocument(target.value)} label='Não' />\r\n            <Form.Check type='radio' inline ref={register({ required: true })} name='foreignDocument' value=\"sim\" checked={foreignDocument === 'sim'} onChange={({ target }) => setForeignDocument(target.value)} label='Sim' />\r\n            <Form.Text className='error'><p>{errors.foreignDocument && \"Campo Sexo é obrigatório\"}</p></Form.Text>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"5\" label='Ano/Semestre Letivo de Conclusão ' name='semesterYearConclusion' register={register({ required: true })} value={semesterYearConclusion} type='text' textoErro={errors.semesterYearConclusion && \"Campo Ano/Semestre Letivo de Conclusão é obrigatório\"} onChange={(event) => setSemesterYearConclusion(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"5\" label='Data Colação De Grau' name='dateGraduation' register={register({ required: true })} value={dateGraduation} type='date' textoErro={errors.dateGraduation && \"Campo Data inicial é obrigatória\"} onChange={(event) => setDateGraduation(event.target.value)}></Input>\r\n            </Form.Row>\r\n            <Form.Row>\r\n\r\n              <Input size='lg' lg=\"5\" label='Data Expedição' name='dateDispatch' register={register({ required: true })} value={dateDispatch} type='date' textoErro={errors.dateGraduation && \"Campo Data Expedição é obrigatória\"} onChange={(event) => setDateDispatch(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"5\" label='Data de Inclusão' value={inclusionDate} name='inclusionDate' register={register({ required: true })} type='date' textoErro={errors.initialDate && \"Data de inclusão é Obrigatório\"} onChange={(event) => setInclusionDate(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.File label=\"Documentação\" />\r\n              </Form.Group>\r\n            </Form>\r\n            {loading ? (<Button size='lg' disabled className=\" mt-3 mr-2\" variant=\"primary\" type=\"submit\"> Salvando...</Button>\r\n                    ) : (<Button size='lg' className=\" mt-3 mr-2\" variant=\"primary\" type=\"submit\"> Salvar </Button>)}\r\n                    {/* <Button className=\"col-lg-2 ml-3 mt-3\" variant=\"secondary\" type=\"button\" href=\"/cadastro/incluirCadastroDiploma\" > Incluir </Button> */}\r\n                    {loading ? (<Button size='lg' disabled className=\" mt-3 \" variant=\"warning\" type=\"submit\"> Pesquisando...</Button>\r\n                    ) : (<Button size='lg' className=\" mt-3 mr-2\" variant=\"warning\" type=\"submit\"> Pesquisar </Button>)}                    \r\n                    <Button  size='lg' className=\" mt-3 mr-2\" variant=\"info\">Nova Inclusão</Button>\r\n <Button  size='lg' className=\" mt-3\" variant='secondary'>Voltar</Button>\r\n\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    //  </div>\r\n  );\r\n}\r\n\r\nexport default IncluirCadastroDiploma\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Select.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\RadioECheckbox\\Checkbox.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\HomeScreen.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\Curso.js",["247","248","249","250","251","252","253"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FaUserEdit } from 'react-icons/fa';\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Input from '../Form/Input';\r\nimport ModalEditar from '../Form/Modal/ModalEditar';\r\nimport ModalConfirmarExclusao from '../Form/Modal/ModalConfirmarExclusao';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\nimport Select from '../Form/Select';\r\n\r\nconst Curso = () => {\r\n    const [name, setName] = React.useState('');\r\n    // const [dados, setDados] = React.useState([{''} ]);\r\n    const [dados, setDados] = React.useState([\r\n        { id: '1', name: 'Engenharia' },\r\n        { id: '2', name: 'Português' }\r\n    ]);\r\n    const [book, setBook] = React.useState('');\r\n    const [courseCode, setCourseCode] = React.useState('');\r\n    const [noRecord, setNoRecord] = React.useState(false);\r\n    const [loading, setLoading] = React.useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [showExcluir, setShowExcluir] = React.useState(false);\r\n    const [showAlert, setShowAlert] = React.useState(false);\r\n    const [showAlertSucessDelet, setShowAlertSucessDelet] = React.useState(false);\r\n    const [showAlertErrorDelet, setShowAlertErrorDelet] = React.useState(false);\r\n    const [table, setTable] = React.useState(false);\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const navigate = useNavigate();\r\n    const handleShowExcluir = (e, id) => setShowExcluir(true);\r\n    const handleShow = () => setShow(true);\r\n    const handleCloseExcluirCancelar = () => setShowExcluir(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleInclude = () => navigate('/cadastro/incluirCurso');\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        // simulando dados do banco - início\r\n        const dados = ([\r\n            { id: '1', name: 'Engenharia' },\r\n            { id: '2', name: 'Português' }\r\n        ]);\r\n        // simulando dados do banco - fim\r\n\r\n        const dadosBanco = dados.filter((dado) => dado.name == name);\r\n\r\n        if (dadosBanco != '') {\r\n            setTable(true);\r\n            setNoRecord(false);\r\n\r\n        } else {\r\n            setNoRecord(true);\r\n            setTable(false);\r\n        }\r\n\r\n    };\r\n\r\n    const handleDelete = (e, id) => {\r\n        const novosDados = [...dados]\r\n        novosDados.splice(novosDados.indexOf({ id }), 1);\r\n        setDados(novosDados)\r\n        setShowExcluir(false);\r\n        setTable(false)\r\n        setShowAlertSucessDelet(true)\r\n        setShowAlertErrorDelet(true)\r\n        setName('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"row justify-content-end container animeLeft\">\r\n            <div className=\"col-10\">\r\n                <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Cadastro de Curso</h1></div>\r\n\r\n                <div className='content' >\r\n                    {showAlertSucessDelet && <AlertSucess texto='Registro Excluído com sucesso !' show={showAlertSucessDelet} className='col-md-10' onClick={() => setShowAlertSucessDelet(false)}></AlertSucess>}\r\n                    {showAlertErrorDelet && <AlertError texto='Erro na Exclusão do registro !' show={showAlertErrorDelet} className='col-md-10' onClick={() => setShowAlertErrorDelet(false)}></AlertError>}\r\n                    <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='10' label='Curso' name='name' value={name} type='text' register={register({ required: true })} textoErro={errors.name && \"Nome do Curso é obrigatório\"} placeholder='Nome do Curso' onChange={(event) => setName(event.target.value)}></Input>\r\n                        </Form.Row>\r\n\r\n                        {loading ? (<Button size='lg' disabled className=\" mt-3 mr-2\" variant=\"warning\" type=\"submit\"> Pesquisando...</Button>\r\n                        ) : (<Button size='lg' className=\" mt-3 mr-2\" variant=\"warning\" type=\"submit\"> Pesquisar </Button>)}\r\n                        {/* <Button className=\"col-lg-2 ml-3 mt-3\" variant=\"secondary\" type=\"button\" href=\"/cadastro/incluirCadastroDiploma\" > Incluir </Button> */}\r\n                        <Button size='lg' className=\"ml-3 mt-3\" variant=\"secondary\" type=\"button\" onClick={handleInclude} > Incluir </Button>\r\n\r\n                    </Form>\r\n\r\n                    {table && <div > <h5 className=\"mt-5\"> Resultados Encontrados:</h5><Table striped bordered hover className=\" col-lg-10  mt-3 animeLeft\">\r\n                        <thead >\r\n                            <tr>\r\n                                <th >ID</th>\r\n                                <th>Curso</th>\r\n                                <th>Opções</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {table && dados\r\n                                .filter((dado) => dado.name == name).map(({ id, name }) => (\r\n                                    <tr key={id}>\r\n                                        <td>{id}</td>\r\n                                        <td>{name}</td>\r\n                                        <td>\r\n\r\n                                            <FaUserEdit size='2em' color='#3c6178' title=\"Editar\" onClick={handleShow} ></FaUserEdit >\r\n                                            <RiDeleteBin6Line className='ml-3 mt-1' size='1.9em' color='#c32b3f' title=\"Excluir\" onClick={handleShowExcluir}></RiDeleteBin6Line>\r\n                                            {/* <FaTrashAlt className='deletar-icons ' title=\"Excluir\" onClick={handleShowExcluir} ></FaTrashAlt> */}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                        </tbody>\r\n                    </Table> </div>}\r\n                    {noRecord && <div className='mt-5 mb-5' style={{ color: \"#c32b3f\" }}><h3>Nenhum registro Encontrado</h3></div>}\r\n\r\n                </div>\r\n\r\n                <ModalEditar show={show} onHide={handleClose} className='subtitleModal ' texto='Editar Cadastro de Diplomas' onClick={handleClose}>\r\n                    <Form className=\"mt-4 container\">\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='10' label='Curso' name='name' type='text' register={register({ required: true })} textoErro={errors.name && \"Nome do Curso é obrigatório\"} onChange={(event) => setName(event.target.value)}></Input>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Select lg='5' size='lg' label='Livro' value={book} name='book' register={register({ required: true })} options={['DSRD-8', 'DSRD-7']} textoErro={errors.book && \"Campo Livro é obrigatório\"} onChange={({ target }) => setBook(target.value)}></Select>\r\n                            <Select lg='5' size='lg' label='Código do Curso' value={courseCode} name='courseCode' register={register({ required: true })} options={['112', '113']} textoErro={errors.courseCode && \"Campo Código do Curso é obrigatório\"} onChange={({ target }) => setCourseCode(target.value)}></Select>\r\n                        </Form.Row>\r\n\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}> Fechar </Button>\r\n                            <Button variant=\"primary\">Salvar</Button>\r\n                            <Button variant=\"warning\">Pesquisar</Button>\r\n                            <Button variant=\"info\">Nova Inclusão</Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </ModalEditar>\r\n\r\n                <ModalConfirmarExclusao showExcluir={showExcluir} onHide={handleCloseExcluirCancelar} className='subtitleModal'\r\n                    cancelar={handleCloseExcluirCancelar} delet={(e) => handleDelete()} texto='Tem certeza que deseja excluir o item selecionado !' > </ModalConfirmarExclusao>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Curso\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\IncluirCadastroInstituicao.js",["254","255","256","257","258","259","260"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FaUserEdit } from 'react-icons/fa';\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Acordeao from '../Acordeao';\r\nimport Input from '../Form/Input';\r\nimport ModalEditar from '../Form/Modal/ModalEditar';\r\nimport ModalConfirmarExclusao from '../Form/Modal/ModalConfirmarExclusao';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\nimport Select from '../Form/Select';\r\n\r\n\r\nconst IncluirCadastroInstituicao = () => {\r\n    const [institution, setInstitution] = React.useState('');\r\n    const [graduationCode, setGraduationCode] = React.useState('');\r\n    const [postGraduationCode, setPostGraduationCode] = React.useState('');\r\n    const [responsible, setResponsible] = React.useState('');\r\n    const [telephone, setTelephone] = React.useState('');\r\n    const [graduationEmail, setGraduationEmail] = React.useState('');\r\n    const [emailPostGraduation, setEmailPostGraduation] = React.useState('');\r\n    const [address, setAddress] = React.useState('');\r\n    const [district, setDistrict] = React.useState('');\r\n    const [city, setCity] = React.useState('');\r\n    const [state, setState] = React.useState('');\r\n    const [zipCode, setZipCode] = React.useState('');\r\n    const [institutionType, setInstitutionType] = React.useState('externa');\r\n    const [sendEmailReviews, setSendEmailReviews] = React.useState('nao');\r\n    const [noRecord, setNoRecord] = React.useState(false);\r\n    const [loading, setLoading] = React.useState('');\r\n    const [showAlertSucessInclude, setShowAlertSucessInclude] = React.useState(false);\r\n    const [showAlertErrorInclude, setShowAlertErrorInclude] = React.useState(true);\r\n    const [show, setShow] = React.useState(false);\r\n    const [showExcluir, setShowExcluir] = React.useState(false);\r\n    const [showAlert, setShowAlert] = React.useState(false);\r\n    const [table, setTable] = React.useState(false);\r\n    const [search, setSearch,] = React.useState(false);\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const navigate = useNavigate();\r\n\r\n    const handleShowExcluir = (e, id) => setShowExcluir(true);\r\n    const handleShow = () => setShow(true);\r\n    const handleCloseExcluirCancelar = () => setShowExcluir(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleInclude = () => navigate('/cadastro/incluirCadastroDiploma');\r\n\r\n    // simulando dados do banco - início\r\n    const [dados, setDados] = React.useState([\r\n        { id: '1', institution: 'UEMG', graduationCode: '1', postGraduationCode: '5', email: 'anapaula241@yahoo.com.br' },\r\n        { id: '2', institution: 'UFLA', graduationCode: '1', postGraduationCode: '5', email: 'anapaula241@yahoo.com.br' }\r\n    ]);\r\n\r\n    const onSubmit = (data) => {\r\n        setTable(true);\r\n        setSearch(true);\r\n\r\n        console.log(data);\r\n        //  if (dados.aluno != aluno ) {\r\n        //   setNenhumRegistro(true);\r\n        //   setTabela(false);\r\n        // }\r\n\r\n    };\r\n    const handleDelete = (e, id) => {\r\n        const novosDados = [...dados]\r\n        novosDados.splice(novosDados.indexOf({ id }), 1);\r\n        setDados(novosDados)\r\n        console.log(id);\r\n        console.log(novosDados);\r\n        setShowExcluir(false);\r\n        console.log(novosDados);\r\n        // setShowAlert(true);\r\n        setInstitution('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"row justify-content-end container animeLeft\">\r\n            <div className=\"col-10\">\r\n                <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Cadastro de Instituições</h1></div>\r\n\r\n                <div className='content' >\r\n                    {showAlertSucessInclude && <AlertSucess texto='Registro Incluído com Sucesso !' show={showAlertSucessInclude} className='col-md-10' onClick={() => setShowAlertSucessInclude(false)}></AlertSucess>}\r\n                    {showAlertErrorInclude && <AlertError texto='Erro na Inclusão do Registro !' show={showAlertErrorInclude} className='col-md-10' onClick={() => setShowAlertErrorInclude(false)}></AlertError>}\r\n                    <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='10' label='Instituição' name='institution' value={institution} type='text' register={register({ required: true })} textoErro={errors.institution && \"Nome do Instituição é obrigatório\"} placeholder='Nome do aluno' onChange={(event) => setInstitution(event.target.value)}></Input>\r\n                        </Form.Row>\r\n\r\n                        <Form.Label>Código do Curso</Form.Label>\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='5' label='Graduação' name='graduationCode' value={graduationCode} type='text' register={register({ required: true })} textoErro={errors.graduationCode && \"Campo Graduação é obrigatório\"} placeholder='Nome do aluno' onChange={(event) => setGraduationCode(event.target.value)}></Input>\r\n                            <Input size='lg' lg='5' label='Pós-Graduação' name='postGraduationCode' value={postGraduationCode} type='text' register={register({ required: true })} textoErro={errors.postGraduationCode && \"Campo Pós-Graduação é obrigatório\"} placeholder='Nome do aluno' onChange={(event) => setPostGraduationCode(event.target.value)}></Input>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='10' label='Responsável' name='responsible' value={responsible} type='text' register={register({ required: true })} textoErro={errors.responsible && \"Campo Responsável é obrigatório\"} placeholder='Nome do Responsável' onChange={(event) => setResponsible(event.target.value)}></Input>\r\n\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='3' label='Telefone' name='telephone' value={telephone} type='text' register={register({ required: true })} textoErro={errors.telephone && \"Campo Telefone é obrigatório\"}  onChange={(event) => setTelephone(event.target.value)}></Input>\r\n                            <Input size='lg' lg='7' label='Email da Graduação' name='graduationEmail' value={graduationEmail} type='email' register={register({ required: true })} textoErro={errors.graduationEmail && \"Campo Email da Graduação é obrigatório\"} onChange={(event) => setGraduationEmail(event.target.value)}></Input>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='10' label='Email da Pós-Graduação' name='emailPostGraduation' value={emailPostGraduation} type='email' register={register({ required: true })} textoErro={errors.emailPostGraduation && \"Campo Email da Pós-Graduação é obrigatório\"} onChange={(event) => setEmailPostGraduation(event.target.value)}></Input>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='10' label='Endereço' name='address' value={address} type='text' register={register({ required: true })} textoErro={errors.address && \"Campo Endereço é obrigatório\"} onChange={(event) => setAddress(event.target.value)}></Input>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='5' label='Bairro' name='district' value={district} type='text' register={register({ required: true })} textoErro={errors.district && \"Campo Bairro é obrigatório\"} onChange={(event) => setDistrict(event.target.value)}></Input>\r\n                            <Select lg='5' size='lg' label='Cidade' value={city} name='city' register={register({ required: true })} options={['Belo Horizonte', 'São Paulo', 'Rio de Janeiro']} textoErro={errors.city && \"Campo Cidade é obrigatório\"} onChange={({ target }) => setCity(target.value)}></Select>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Select lg='5' size='lg' label='Estado' value={state} name='state' register={register({ required: true })} options={['Belo Horizonte', 'São Paulo', 'Rio de Janeiro']} textoErro={errors.city && \"Campo Estado é obrigatório\"} onChange={({ target }) => setState(target.value)}></Select>\r\n                            <Input size='lg' lg='5' label='Cep' name='zipCode' value={zipCode} type='text' register={register({ required: true })} textoErro={errors.zipCode && \"Campo Cep é obrigatório\"} onChange={(event) => setZipCode(event.target.value)}></Input>\r\n                        </Form.Row>\r\n\r\n                        <Form.Label className='mr-3'>Tipo Instituiçao</Form.Label>\r\n                        <Form.Check type='radio' inline ref={register({ required: true })} name='institutionType' value=\"interna\" checked={institutionType === 'interna'} onChange={({ target }) => setInstitutionType(target.value)} label='interna' />\r\n                        <Form.Check type='radio' inline ref={register({ required: true })} name='institutionType' value=\"externa\" checked={institutionType === 'externa'} onChange={({ target }) => setInstitutionType(target.value)} label='externa' />\r\n                        <Form.Text className='error'><p>{errors.institutionType && \"Campo tipo Instituição é obrigatório\"}</p></Form.Text>\r\n\r\n                        <Form.Label className='mr-3'>Enviar Email das Análises </Form.Label>\r\n                        <Form.Check type='radio' inline ref={register({ required: true })} name='sendEmailReviews' value=\"sim\" checked={sendEmailReviews === 'sim'} onChange={({ target }) => setSendEmailReviews(target.value)} label='sim' />\r\n                        <Form.Check type='radio' inline ref={register({ required: true })} name='sendEmailReviews' value=\"nao\" checked={sendEmailReviews === 'nao'} onChange={({ target }) => setSendEmailReviews(target.value)} label='nao' />\r\n                        <Form.Text className='error'><p>{errors.institutionType && \"Campo Enviar Email das Análises é obrigatório\"}</p></Form.Text>\r\n\r\n\r\n\r\n                        {loading ? (<Button variant=\"primary\" size='lg' className=\"col-lg-2 mb-4 ml-3 mt-4 mr-2 \" type=\"button\" onClick={handleInclude} > Salvando... </Button>\r\n                        ) : (<Button size='lg' className=\"col-lg-2 mt-4 mr-2 mb-4 \" variant=\"primary\"   type=\"submit\"> Salvar </Button>)}\r\n\r\n                        {loading ? (<Button size='lg' disabled className=\"col-lg-2 mt-4 \" variant=\"warning\" type=\"submit\"> Pesquisando...</Button>\r\n                        ) : (<Button size='lg' className=\"col-lg-2 mt-4 mb-4 \" variant=\"warning\" type=\"submit\"> Pesquisar </Button>)}\r\n\r\n                        <Button size='lg' className=\" ml-2 mt-4 mb-4\" variant=\"secondary\" type=\"button\" onClick={handleInclude} > Nova Inclusão </Button>\r\n\r\n\r\n                    </Form>\r\n\r\n                    {/* tabela de resultados Encontrados - início */}\r\n                    {/* {table && dados.length > 0 && <div > <h5 className=\"mt-5\"> Resultados Encontrados:</h5><Table striped bordered hover className=\" col-lg-11  mt-3 animeLeft\"> */}\r\n                    {table && dados.length > 0 && <div > <h5 className=\"mt-5\"> Resultados Encontrados:</h5><Table striped bordered hover className=\" col-lg-10  mt-3 animeLeft\">\r\n                        <thead >\r\n                            <tr>\r\n                                <th >ID</th>\r\n                                <th>Instituiçao</th>\r\n                                <th>Cod.GRAD.</th>\r\n                                <th>Cod.Pos</th>\r\n                                <th>Opções</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {search && dados\r\n                                .filter((dado) => dado.institution == institution).map(({ id, institution, graduationCode, postGraduationCode }) => (\r\n                                    <tr key={id}>\r\n                                        <td>{id}</td>\r\n                                        <td>{institution}</td>\r\n                                        <td>{graduationCode}</td>\r\n                                        <td>{postGraduationCode}</td>\r\n                                        <td>\r\n\r\n                                            <FaUserEdit size='2em' color='#3c6178' title=\"Editar\" onClick={handleShow} ></FaUserEdit >\r\n                                            <RiDeleteBin6Line className='ml-3 mt-1' size='1.9em' color='#c32b3f' title=\"Excluir\" onClick={handleShowExcluir}></RiDeleteBin6Line>\r\n                                            {/* <FaTrashAlt className='deletar-icons ' title=\"Excluir\" onClick={handleShowExcluir} ></FaTrashAlt> */}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                        </tbody>\r\n                    </Table> </div>}\r\n                    {noRecord && <p>Nenhum registro Encontrado</p>}\r\n                    {/* tabela de resultados Encontrados - fim */}\r\n                </div>\r\n\r\n                <ModalEditar show={show} onHide={handleClose} className='subtitleModal ' texto='Editar Cadastro de Diplomas' onClick={handleClose}>\r\n                    <Form className=\"mt-4\">\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='10' label='Instituição' name='institution' value={institution} type='text' register={register({ required: true })} textoErro={errors.institution && \"Nome do Instituição é obrigatório\"} placeholder='Nome do aluno' onChange={(event) => setInstitution(event.target.value)}></Input>\r\n                        </Form.Row>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}> Fechar </Button>\r\n                            <Button variant=\"primary\">Salvar alterações</Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </ModalEditar>\r\n\r\n                <ModalConfirmarExclusao showExcluir={showExcluir} onHide={handleCloseExcluirCancelar} className='subtitleModal'\r\n                    cancelar={handleCloseExcluirCancelar} delet={(e) => handleDelete()} texto='Tem certeza que deseja excluir o item selecionado !' > </ModalConfirmarExclusao>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncluirCadastroInstituicao\r\n\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\CursoOfertado.js",["261","262","263","264","265","266","267","268","269","270"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FaUserEdit } from 'react-icons/fa';\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Acordeao from '../Acordeao';\r\nimport Input from '../Form/Input';\r\nimport ModalEditar from '../Form/Modal/ModalEditar';\r\nimport ModalConfirmarExclusao from '../Form/Modal/ModalConfirmarExclusao';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\nimport Select from '../Form/Select';\r\n\r\nconst CursoOfertado = () => {\r\n    const [dados, setDados] = React.useState([\r\n        { id: '1',institution:'UFLA',name: 'Engenharia', habilitacao:'habilitacao', level:'level', modality:'modality' },\r\n        { id: '2', institution:'UEMG',name: 'Português', habilitacao:'habilitacao' , level:'level', modality:'modality'}\r\n    ]);\r\n    const [name, setName] = React.useState(''); \r\n    const [institution, setInstitution] = React.useState('');\r\n    const [courseCode, setCourseCode] = React.useState('');\r\n    const [book, setBook] = React.useState('');\r\n    const [noRecord, setNoRecord] = React.useState(false);\r\n    const [loading, setLoading] = React.useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [showExcluir, setShowExcluir] = React.useState(false);\r\n    const [showAlert, setShowAlert] = React.useState(false);\r\n    const [showAlertSucessDelet, setShowAlertSucessDelet] = React.useState(false);\r\n  const [showAlertErrorDelet, setShowAlertErrorDelet] = React.useState(false);\r\n    const [table, setTable] = React.useState(false);\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const navigate = useNavigate();\r\n    const handleShowExcluir = (e, id) => setShowExcluir(true);\r\n    const handleShow = () => setShow(true);\r\n    const handleCloseExcluirCancelar = () => setShowExcluir(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleInclude = () => navigate('/cadastro/incluirCursoOfertado');\r\n\r\n    const onSubmit = (data) => {\r\n        // simulando dados do banco - início\r\n        const dados = ([\r\n            { id: '1',institution:'UFLA',name: 'Engenharia', habilitacao:'habilitacao', level:'level', modality:'modality' },\r\n            { id: '2', institution:'UEMG',name: 'Português', habilitacao:'habilitacao' , level:'level', modality:'modality'}\r\n        ]);\r\n        // simulando dados do banco - fim\r\n\r\n        const dadosBanco = dados.filter((dado) => dado.institution == institution || dado.name == name);\r\n\r\n        if (dadosBanco != '') {\r\n            setTable(true);\r\n            setNoRecord(false);\r\n\r\n        } else {\r\n            setNoRecord(true);\r\n            setTable(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = (e, id) => {\r\n        const novosDados = [...dados]\r\n        novosDados.splice(novosDados.indexOf({ id }), 1);\r\n        setDados(novosDados)\r\n        setShowExcluir(false); \r\n        setTable(false)\r\n        setShowAlertSucessDelet(true)\r\n        setShowAlertErrorDelet(true)\r\n        setName('');\r\n    };\r\n    return (\r\n         <div className=\"row justify-content-end container animeLeft\">\r\n            <div className=\"col-10\">\r\n        <div className=\"container animeLeft \">\r\n            <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Cadastro de Curso Ofertado</h1></div>\r\n          \r\n            <div className='content' >\r\n               {showAlertSucessDelet && <AlertSucess texto='Registro Excluído com sucesso !' show={showAlertSucessDelet} className='col-md-10' onClick={() => setShowAlertSucessDelet(false)}></AlertSucess>} \r\n               {showAlertErrorDelet && <AlertError texto='Erro na Exclusão do registro !'  show={showAlertErrorDelet} className='col-md-10'  onClick={() => setShowAlertErrorDelet(false)}></AlertError>} \r\n                <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n                <Form.Row>\r\n                        <Input size='lg' lg='10' label='Instituição' name='institution' value={institution} type='text' register={register({ required: true })} textoErro={errors.institution && \"Nome do Instituição é obrigatório\"} placeholder='Nome da Instituição' onChange={(event) => setInstitution(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Input size='lg' lg='10' label='Curso' name='name' value={name} type='text' register={register({ required: true })} textoErro={errors.name && \"Nome do Curso é obrigatório\"} placeholder='Nome do Curso' onChange={(event) => setName(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    {loading ? (<Button size='lg' disabled className=\" mt-3 \" variant=\"warning\" type=\"submit\"> Pesquisando...</Button>\r\n                    ) : (<Button size='lg' className=\" mt-3 \" variant=\"warning\" type=\"submit\"> Pesquisar </Button>)}\r\n                    {/* <Button className=\"col-lg-2 ml-3 mt-3\" variant=\"secondary\" type=\"button\" href=\"/cadastro/incluirCadastroDiploma\" > Incluir </Button> */}\r\n                    <Button size='lg' className=\"ml-3 mt-3\" variant=\"secondary\" type=\"button\" onClick={handleInclude} > Incluir </Button>\r\n\r\n                </Form>\r\n\r\n                {table && <div > <h5 className=\"mt-5\"> Resultados Encontrados:</h5><Table striped bordered hover className=\" col-lg-10  mt-3 animeLeft\">\r\n                    <thead >\r\n                        <tr>\r\n                        <th>ID</th>\r\n                            <th>Instituição</th>\r\n                            <th>Curso</th>\r\n                            <th>Habilitação</th>\r\n                            <th>Grau</th>\r\n                            <th>Modalidade</th>\r\n                            <th>Opções</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {table && dados\r\n                            .filter((dado) => dado.institution == institution || dado.name == name).map(({ id, institution, name, habilitacao,level, modality  }) => (\r\n                                <tr key={id}>\r\n                                    <td>{id}</td>\r\n                                     <td>{institution}</td>\r\n                                    <td>{name}</td>\r\n                                    <td>{habilitacao}</td>\r\n                                    <td>{level}</td>\r\n                                    <td>{modality}</td>                                    \r\n                                    \r\n                                    <td>\r\n\r\n                                        <FaUserEdit size='2em' color='#3c6178' title=\"Editar\" onClick={handleShow} ></FaUserEdit >\r\n                                        <RiDeleteBin6Line className='ml-3 mt-1' size='1.9em' color='#c32b3f' title=\"Excluir\" onClick={handleShowExcluir}></RiDeleteBin6Line>\r\n                                        {/* <FaTrashAlt className='deletar-icons ' title=\"Excluir\" onClick={handleShowExcluir} ></FaTrashAlt> */}\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                    </tbody>\r\n                </Table> </div>}\r\n                {noRecord && <div className='mt-5 mb-5' style={{ color: \"#c32b3f\" }}><h3>Nenhum registro Encontrado</h3></div>}\r\n               \r\n            </div>\r\n\r\n            <ModalEditar show={show} onHide={handleClose} className='subtitleModal ' texto='Editar Cadastro de Diplomas' onClick={handleClose}>\r\n                <Form className=\"mt-4 container\">\r\n                    <Form.Row>\r\n                        <Input size='lg' lg='10' label='Curso' name='name' type='text' register={register({ required: true })} textoErro={errors.name && \"Nome do Curso é obrigatório\"} onChange={(event) => setName(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Select lg='5' size='lg' label='Livro' value={book} name='book' register={register({ required: true })} options={['DSRD-8', 'DSRD-7']} textoErro={errors.book && \"Campo Livro é obrigatório\"} onChange={({ target }) => setBook(target.value)}></Select>\r\n                        <Select lg='5' size='lg' label='Código do Curso' value={courseCode} name='courseCode' register={register({ required: true })} options={['112', '113']} textoErro={errors.courseCode && \"Campo Código do Curso é obrigatório\"} onChange={({ target }) => setCourseCode(target.value)}></Select>\r\n                    </Form.Row>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}> Fechar </Button>\r\n                        <Button variant=\"primary\">Salvar alterações</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </ModalEditar>\r\n\r\n            <ModalConfirmarExclusao showExcluir={showExcluir} onHide={handleCloseExcluirCancelar} className='subtitleModal'\r\n                cancelar={handleCloseExcluirCancelar} delet={(e) => handleDelete()} texto='Tem certeza que deseja excluir o item selecionado !' > </ModalConfirmarExclusao>\r\n\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CursoOfertado\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\Instituicao.js",["271","272","273","274","275","276","277","278"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FaUserEdit } from 'react-icons/fa';\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Acordeao from '../Acordeao';\r\nimport Input from '../Form/Input';\r\nimport ModalEditar from '../Form/Modal/ModalEditar';\r\nimport ModalConfirmarExclusao from '../Form/Modal/ModalConfirmarExclusao';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\n\r\n\r\nconst Instituicao = () => {\r\n    const [dados, setDados] = React.useState([\r\n        { id: '1', institution: 'UEMG', graduationCode: '1', postGraduationCode: '5', email: 'anapaula241@yahoo.com.br' },\r\n        { id: '2', institution: 'UFLA', graduationCode: '1', postGraduationCode: '5', email: 'anapaula241@yahoo.com.br' }\r\n    ]);\r\n    const [institution, setInstitution] = React.useState('');\r\n    const [noRecord, setNoRecord] = React.useState(false);\r\n    const [loading, setLoading] = React.useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [showExcluir, setShowExcluir] = React.useState(false);\r\n    const [showAlert, setShowAlert] = React.useState(false);\r\n    const [table, setTable] = React.useState(false);\r\n    const [showAlertSucessDelet, setShowAlertSucessDelet] = React.useState(false);\r\n    const [showAlertErrorDelet, setShowAlertErrorDelet] = React.useState(false);\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const navigate = useNavigate();\r\n\r\n    const handleShowExcluir = (e, id) => setShowExcluir(true);\r\n    const handleShow = () => setShow(true);\r\n    const handleCloseExcluirCancelar = () => setShowExcluir(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleInclude = () => navigate('/cadastro/incluirCadastroInstituicao');\r\n\r\n    const onSubmit = (data) => {\r\n        // simulando dados do banco - início\r\n        const dados = ([\r\n            { id: '1', institution: 'UEMG', graduationCode: '1', postGraduationCode: '5', email: 'anapaula241@yahoo.com.br' },\r\n            { id: '2', institution: 'UFLA', graduationCode: '1', postGraduationCode: '5', email: 'anapaula241@yahoo.com.br' }\r\n        ]);\r\n        // simulando dados do banco - início\r\n\r\n        const dadosBanco = dados.filter((dado) => dado.institution == institution);\r\n\r\n        if (dadosBanco != '') {\r\n            setTable(true);\r\n            setNoRecord(false);\r\n\r\n        } else {\r\n            setNoRecord(true);\r\n            setTable(false);\r\n        }\r\n\r\n    };\r\n    const handleDelete = (e, id) => {\r\n        const novosDados = [...dados]\r\n        novosDados.splice(novosDados.indexOf({ id }), 1);\r\n        setDados(novosDados)\r\n        setShowExcluir(false);\r\n        setTable(false)\r\n        setShowAlertSucessDelet(true)\r\n        setShowAlertErrorDelet(true)\r\n        setInstitution('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"row justify-content-end container animeLeft\">\r\n            <div className=\"col-10\">\r\n                <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Cadastro de Instituições</h1></div>\r\n\r\n                <div className='content' >\r\n                    {showAlertSucessDelet && <AlertSucess texto='Registro Excluído com sucesso !' show={showAlertSucessDelet} className='col-md-10' onClick={() => setShowAlertSucessDelet(false)}></AlertSucess>}\r\n                    {showAlertErrorDelet && <AlertError texto='Erro na Exclusão do registro !' show={showAlertErrorDelet} className='col-md-10' onClick={() => setShowAlertErrorDelet(false)}></AlertError>}\r\n                    <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='10' label='Instituição' name='institution' value={institution} type='text' register={register({ required: true })} textoErro={errors.institution && \"Nome do Instituição é obrigatório\"} placeholder='Nome do aluno' onChange={(event) => setInstitution(event.target.value)}></Input>\r\n                        </Form.Row>\r\n\r\n\r\n                        {loading ? (<Button size='lg' disabled className=\"col-lg-2 mt-3 \" variant=\"warning\" type=\"submit\"> Pesquisando...</Button>\r\n                        ) : (<Button size='lg' className=\"col-lg-2 mt-3 \" variant=\"warning\" type=\"submit\"> Pesquisar </Button>)}\r\n                        {/* <Button className=\"col-lg-2 ml-3 mt-3\" variant=\"secondary\" type=\"button\" href=\"/cadastro/incluirCadastroDiploma\" > Incluir </Button> */}\r\n                        <Button size='lg' className=\"col-lg-2 ml-3 mt-3\" variant=\"secondary\" type=\"button\" onClick={handleInclude} > Incluir </Button>\r\n\r\n                    </Form>\r\n                    {table && <div > <h5 className=\"mt-5\"> Resultados Encontrados:</h5><Table striped bordered hover className=\" col-lg-10  mt-3 animeLeft\">\r\n                        <thead >\r\n                            <tr>\r\n                                <th >ID</th>\r\n                                <th>Instituiçao</th>\r\n                                <th>Cod.GRAD.</th>\r\n                                <th>Cod.Pos</th>\r\n                                <th>Opções</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {table && dados\r\n                                .filter((dado) => dado.institution == institution).map(({ id, institution, graduationCode, postGraduationCode }) => (\r\n                                    <tr key={id}>\r\n                                        <td>{id}</td>\r\n                                        <td>{institution}</td>\r\n                                        <td>{graduationCode}</td>\r\n                                        <td>{postGraduationCode}</td>\r\n                                        <td>\r\n\r\n                                            <FaUserEdit size='2em' color='#3c6178' title=\"Editar\" onClick={handleShow} ></FaUserEdit >\r\n                                            <RiDeleteBin6Line className='ml-3 mt-1' size='1.9em' color='#c32b3f' title=\"Excluir\" onClick={handleShowExcluir}></RiDeleteBin6Line>\r\n                                            {/* <FaTrashAlt className='deletar-icons ' title=\"Excluir\" onClick={handleShowExcluir} ></FaTrashAlt> */}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                        </tbody>\r\n                    </Table> </div>}\r\n                    {noRecord && <div className='mt-5 mb-5' style={{ color: \"#c32b3f\" }}><h3>Nenhum registro Encontrado</h3></div>}\r\n                    {/* tabela de resultados Encontrados - fim */}\r\n                </div>\r\n\r\n                <ModalEditar show={show} onHide={handleClose} className='subtitleModal ' texto='Editar Cadastro de Diplomas' onClick={handleClose}>\r\n                    <Form className=\"mt-4\">\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='10' label='Instituição' name='institution' value={institution} type='text' register={register({ required: true })} textoErro={errors.institution && \"Nome do Instituição é obrigatório\"} placeholder='Nome do aluno' onChange={(event) => setInstitution(event.target.value)}></Input>\r\n                        </Form.Row>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}> Fechar </Button>\r\n                            <Button variant=\"primary\">Salvar </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </ModalEditar>\r\n\r\n                <ModalConfirmarExclusao showExcluir={showExcluir} onHide={handleCloseExcluirCancelar} className='subtitleModal'\r\n                    cancelar={handleCloseExcluirCancelar} delet={(e) => handleDelete()} texto='Tem certeza que deseja excluir o item selecionado !' > </ModalConfirmarExclusao>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instituicao\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Operacoes\\LivroRegistro.js",["279","280","281"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Input from '../Form/Input';\r\nimport Acordeao from '../Acordeao';\r\nimport Select from '../Form/Select';\r\n\r\nconst LivroRegistro = () => {\r\n    const [book, setBook] = React.useState('');\r\n    const [homePage, setHomePage] = React.useState('');\r\n    const [loading, setLoading] = React.useState('');\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = (data) => console.log(data);\r\n\r\n    return (\r\n        <div className=\"container animeLeft \">\r\n            <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Relatório Registro de Livros</h1></div>\r\n            \r\n            <div className='content' >\r\n                <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n                    <Form.Row>\r\n                        <Select lg='12' size='lg' label='Livro' value={book} name='book' register={register({ required: true })} options={['livro1', 'livro2']} textoErro={errors.book && \"Campo livro é obrigatório\"} onChange={(event) => setBook(event.target.value)}></Select>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Input size='lg' lg='12' label='Pagina Inicial' name='homePage' value={homePage} type='text' register={register({ required: true })} textoErro={errors.homePage && \"Campo Página Inicial é obrigatória\"} placeholder='Número da Página' onChange={(event) => setHomePage(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    {loading ? (<Button size='lg' disabled className=\" mt-3 \" variant=\"primary\" type=\"submit\"> Carregando...</Button>\r\n                    ) : (<Button  size='lg' className=\"ol-lg-3 mt-3 \" variant=\"primary\" type=\"submit\"> Carregar PDF </Button>)}\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LivroRegistro\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Consultas\\Diplomas.js",["282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { ImEyeMinus } from \"react-icons/im\";\r\n// import { BsFillEyeFill } from 'react-icons/bs';\r\n// import { event } from 'jquery';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Acordeao from '../Acordeao';\r\nimport Input from '../Form/Input';\r\nimport Select from '../Form/Select';\r\n\r\nconst Diplomas = () => {\r\n    const [name, setName] = React.useState('');\r\n    const [institution, setInstitution] = React.useState('');\r\n    const [initialDate, setInitialDate] = React.useState('');\r\n    const [finalDate, setFinalDate] = React.useState('');\r\n    const [status, setStatus] = React.useState('');\r\n    const [loading, seLoading] = React.useState('');\r\n    const [table, setTable] = React.useState(false);\r\n    const [noRecord, setNoRecord] = React.useState(false);\r\n    const navigate = useNavigate();\r\n    const [show, setShow] = React.useState(false);\r\n    const [showExcluir, setShowExcluir] = React.useState(false);\r\n\r\n    // simulando dados do banco \r\n    const [dados, setDados] = React.useState([\r\n        { id: '1', name: 'luk', instituição: 'UEMG', data: '01/05/10', situacao: 'Liberado' },\r\n        { id: '2', name: 'lulu', instituição: 'UFMG', data: '01/05/10', situacao: 'Liberado' }\r\n    ]);\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleTable = () => setTable(true);\r\n    const handleView = () => navigate('/consulta/diplomas/visualizar');\r\n\r\n    const onSubmit = (data) => {\r\n        setTable(true);\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"row justify-content-end container animeLeft\">\r\n            <div className=\"col-10\">\r\n\r\n                <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Consulta Analítica</h1></div>\r\n\r\n                <div className='content' >\r\n                    <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n\r\n                        <Form.Row>\r\n                            {initialDate == '' && finalDate == '' ? (<Input size='lg' lg=\"10\" label='Aluno' name='name' register={register({ required: true })} value={name} type='text' textoErro={errors.name && \"Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>) :\r\n                                (<Input size='lg' lg='10' label='Aluno' name='name' value={name} type='text' register={register({ required: false })} textoErro={errors.name && \"Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>)}\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='10' label='Instituição' name='institution' value={institution} type='text' register={register({ required: true })} textoErro={errors.institution && \"Nome do Instituição é obrigatório\"} placeholder='Nome do aluno' onChange={(event) => setInstitution(event.target.value)}></Input>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            {name == '' ? (<Input size='lg' lg=\"4\" label='Data' name='initialDate' register={register({ required: true })} value={initialDate} type='date' textoErro={errors.initialDate && \"Data inicial é obrigatória\"} onChange={(event) => setInitialDate(event.target.value)}></Input>) :\r\n                                (<Input size='lg' lg='4' label='Data' name='initialDate' value={initialDate} type='date' register={register({ required: false })} textoErro={errors.initialDate && \"Data inicial é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setInitialDate(event.target.value)}></Input>)}\r\n                            <p className=\"mt-5 mr-3 ml-3\"> a </p>\r\n                            {name == '' ? (<Input size='lg' className='mt-2' lg=\"4\" label='' name='finalDate' register={register({ required: true })} value={finalDate} type='date' textoErro={errors.finalDate && \"Data Final é obrigatória\"} onChange={(event) => setFinalDate(event.target.value)}></Input>) :\r\n                                (<Input size='lg' lg='4' className='mt-2' name='finalDate' value={finalDate} type='date' register={register({ required: false })} textoErro={errors.finalDate && \"Data Final é obrigatória\"} onChange={(event) => setFinalDate(event.target.value)}></Input>)}\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Select lg='10' size='lg' label='Situação' value={status} name='status' register={register({ required: true })} options={['Liberado', 'Em Diligência']} textoErro={errors.status && \"Campo situação é obrigatório\"} onChange={({ target }) => setStatus(target.value)}></Select>\r\n                        </Form.Row>\r\n\r\n                        {loading ? (<Button size='lg' disabled className=\" mt-3 \" variant=\"warning\" type=\"submit\"> Pesquisando...</Button>\r\n                        ) : (<Button size='lg' className=\"mt-3 \" variant=\"warning\" type=\"submit\"> Pesquisar </Button>)}\r\n\r\n                    </Form>\r\n\r\n                    {/* tabela de resultados Encontrados - início */}\r\n                    {table && dados.length > 0 && <div > <h5 className=\"mt-5\"> Resultados Encontrados:</h5><Table striped bordered hover className=\" col-lg-10  mt-3\">\r\n                        <thead >\r\n                            <tr>\r\n                                <th >ID</th>\r\n                                <th>Aluno</th>\r\n                                <th>Instituiçao</th>\r\n                                <th>Data Registro</th>\r\n                                <th>Situação </th>\r\n                                <th>Opções</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {dados\r\n                                .filter((dado) => dado.name == name).map(({ id, aluno, instituição, data, situacao }) => (\r\n                                    <tr key={id}>\r\n                                        <td>{id}</td>\r\n                                        <td>{name}</td>\r\n                                        <td>{instituição}</td>\r\n                                        <td>{data}</td>\r\n                                        <td>{situacao}</td>\r\n                                        <td>\r\n                                            <ImEyeMinus size='2em' className='ml-3' type='button' title=\"Visualizar\" onClick={handleView} ></ImEyeMinus >\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                        </tbody>\r\n                    </Table> </div>}\r\n                    {/* tabela de resultados Encontrados - fim */}\r\n                    {noRecord && <p>Nenhum registro Encontrado</p>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Diplomas\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Ferramentas\\ManutencaoDiploma.js",["299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FaUserEdit } from 'react-icons/fa';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Acordeao from '../Acordeao';\r\nimport Input from '../Form/Input';\r\nimport Select from '../Form/Select';\r\n\r\nconst ManutencaoDiploma = () => {\r\n    const [name, setName] = React.useState('');\r\n    const [institution, setInstitution] = React.useState('');\r\n    const [initialDate, setInitialDate] = React.useState('');\r\n    const [finalDate, setFinalDate] = React.useState('');\r\n    const [status, setStatus] = React.useState('');\r\n    const [loading, seLoading] = React.useState('');\r\n    const [table, setTable] = React.useState(false);\r\n    const [noRecord, setNoRecord] = React.useState(false);\r\n    const navigate = useNavigate();\r\n    const [show, setShow] = React.useState(false);\r\n    const [showExcluir, setShowExcluir] = React.useState(false);\r\n\r\n    // simulando dados do banco \r\n    const [dados, setDados] = React.useState([\r\n        { id: '1', instituição: 'UEMG', name: 'luk', situacao: 'Liberado', data: '01/05/10' },\r\n        { id: '2', instituição: 'UFMG', name: 'lulu', situacao: 'Liberado', data: '01/05/10' }\r\n    ]);\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleTable = () => setTable(true);\r\n    const handleEdit = () => navigate('/ferramentas/manutencaoDiploma/alterar');\r\n\r\n    const onSubmit = (data) => {\r\n        setTable(true);\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"row justify-content-end container animeLeft\">\r\n            <div className=\"col-10\">\r\n                <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Manutenção Diploma</h1></div>\r\n\r\n                <div className='content' >\r\n                    <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n\r\n                        <Form.Row>\r\n                            {initialDate == '' && finalDate == '' ? (<Input size='lg' lg=\"10\" label='Aluno' name='name' register={register({ required: true })} value={name} type='text' textoErro={errors.name && \"Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>) :\r\n                                (<Input size='lg' lg='10' label='Aluno' name='name' value={name} type='text' register={register({ required: false })} textoErro={errors.name && \"Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>)}\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Input size='lg' lg='10' label='Instituição' name='institution' value={institution} type='text' register={register({ required: true })} textoErro={errors.institution && \"Nome do Instituição é obrigatório\"} placeholder='Nome do aluno' onChange={(event) => setInstitution(event.target.value)}></Input>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            {name == '' ? (<Input size='lg' lg=\"4\" label='Data Registro' name='initialDate' register={register({ required: true })} value={initialDate} type='date' textoErro={errors.initialDate && \"Data inicial é obrigatória\"} onChange={(event) => setInitialDate(event.target.value)}></Input>) :\r\n                                (<Input size='lg' lg='4' label='Data' name='initialDate' value={initialDate} type='date' register={register({ required: false })} textoErro={errors.initialDate && \"Data inicial é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setInitialDate(event.target.value)}></Input>)}\r\n                            <p className=\"mt-5 mr-3 ml-3\"> a </p>\r\n                            {name == '' ? (<Input size='lg' className='mt-2' lg=\"4\" label='' name='finalDate' register={register({ required: true })} value={finalDate} type='date' textoErro={errors.finalDate && \"Data Final é obrigatória\"} onChange={(event) => setFinalDate(event.target.value)}></Input>) :\r\n                                (<Input size='lg' lg='4' className='mt-2' name='finalDate' value={finalDate} type='date' register={register({ required: false })} textoErro={errors.finalDate && \"Data Final é obrigatória\"} onChange={(event) => setFinalDate(event.target.value)}></Input>)}\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Select lg='10' size='lg' label='Situação' value={status} name='status' register={register({ required: true })} options={['Liberado', 'Em Diligência']} textoErro={errors.status && \"Campo situação é obrigatório\"} onChange={({ target }) => setStatus(target.value)}></Select>\r\n\r\n                        </Form.Row>\r\n\r\n                        {loading ? (<Button size='lg' disabled className=\" mt-3 \" variant=\"warning\" type=\"submit\"> Pesquisando...</Button>\r\n                        ) : (<Button size='lg' className=\" mt-3 \" variant=\"warning\" type=\"submit\"> Pesquisar </Button>)}\r\n\r\n                    </Form>\r\n\r\n                    {/* tabela de resultados Encontrados - início */}\r\n                    {table && dados.length > 0 && <div > <h5 className=\"mt-5\"> Resultados Encontrados:</h5><Table striped bordered hover className=\" col-lg-10  mt-3\">\r\n                        <thead >\r\n                            <tr>\r\n                                <th >ID</th>\r\n                                <th>Instituiçao</th>\r\n                                <th>Aluno</th>\r\n                                <th>Situação </th>\r\n                                <th>Data Registro</th>\r\n                                <th>Opções</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {dados\r\n                                .filter((dado) => dado.name == name).map(({ id, aluno, instituição, data, situacao }) => (\r\n                                    <tr key={id}>\r\n                                        <td>{id}</td>\r\n                                        <td>{instituição}</td>\r\n                                        <td>{name}</td>\r\n                                        <td>{situacao}</td>\r\n                                        <td>{data}</td>\r\n\r\n                                        <td>\r\n\r\n                                            <FaUserEdit className='ml-3' size='2em' color='#3c6178' title=\"Alterar\" onClick={handleEdit} ></FaUserEdit>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                        </tbody>\r\n                    </Table> </div>}\r\n                    {/* tabela de resultados Encontrados - fim */}\r\n                    {noRecord && <p>Nenhum registro Encontrado</p>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManutencaoDiploma\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Ferramentas\\ManutencaoDiplomaAlterar.js",["316","317","318","319","320","321","322","323","324","325","326","327","328"],"import React from 'react'\r\nimport useMaskInput from 'use-mask-input';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Alert from 'react-bootstrap/Alert';\r\n// import { event } from 'jquery';\r\nimport { nativeTouchData } from 'react-dom/test-utils';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport Acordeao from '../Acordeao';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\nimport Input from '../Form/Input';\r\nimport Select from '../Form/Select';\r\nimport Textarea from '../Form/Textarea';\r\n// import { valida_cpf, valida } from '../validaCpf';\r\n\r\nconst ManutencaoDiplomaAlterar = () => {\r\n  const [name, setName] = React.useState('');\r\n  const [cpf, setCpf] = React.useState('');\r\n  const [rg, setRg] = React.useState('');\r\n  const [nameFather, setNameFather] = React.useState('');\r\n  const [nameMother, setNameMother] = React.useState('');\r\n  const [nationality, setNationality] = React.useState('');\r\n  const [country, setCountry] = React.useState('');\r\n  const [state, setState] = React.useState('');\r\n  const [city, setCity] = React.useState('');\r\n  const [dateBirth, setDateBirth] = React.useState('');\r\n  const [ra, setRa] = React.useState('');\r\n  const [dateInclusion, setDateInclusion] = React.useState('');\r\n  const [institution, setInstitution] = React.useState('');\r\n  //   const [level, setLevel] = React.useState('');\r\n  const [course, setCourse] = React.useState('');\r\n  const [level, setLevel] = React.useState('');\r\n  const [modality, setModality] = React.useState('');\r\n  const [type, setType] = React.useState('');\r\n  const [copyRegistration, setCopyRegistration] = React.useState('nao');\r\n  const [foreignDocument, setForeignDocument] = React.useState('sim');\r\n  const [passaport, setPassaport] = React.useState('');\r\n  const [semesterYearConclusion, setSemesterYearConclusion] = React.useState('');\r\n  const [dateGraduation, setDateGraduation] = React.useState('');\r\n  const [dateDispatch, setDateDispatch] = React.useState('');\r\n  const [processNumber, setProcessNumber] = React.useState('');\r\n  const [processNumber1, setProcessNumber1] = React.useState('');\r\n  const [processNumber2, setProcessNumber2] = React.useState('');\r\n  const [registerNumber, setRegisterNumber] = React.useState('');\r\n  const [book, setBook] = React.useState('');\r\n  const [sheetNumber, setSheetNumber] = React.useState('');\r\n  const [registrationDate, setRegistrationDate] = React.useState('');\r\n  const [lotNumber, setLotNumber] = React.useState('');\r\n  const [sealNumber, setSealNumber] = React.useState('');\r\n  const [sealDate, setSealDate] = React.useState('');\r\n  const [status, setStatus] = React.useState('');\r\n  const [note, setNote] = React.useState('');\r\n  const [brand, setBrand] = React.useState('');\r\n  const [statusInput, setStatusInput] = React.useState('');\r\n  const [complement, setComplement] = React.useState('');\r\n  const [showAlertSuccessRegister, setShowAlertSuccessRegister] = React.useState(false);\r\n  const [showAlertErrorRegister, setShowAlertErrorRegister] = React.useState(false);\r\n  const [loading, setLoading] = React.useState('');\r\n  // const [erroCpf, setErroCpf] = React.useState('');\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const navigate = useNavigate();\r\n\r\n  // simulando dados do banco \r\n  const [dados, setDados] = React.useState([\r\n    { id: '1', aluno: 'luk', instituição: 'UEMG', data: '01/05/10' }\r\n  ]);\r\n\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  const maskedCPFRef = useMaskInput({\r\n    mask: ['999.999.999-99'],\r\n    register: register({ required: true }),\r\n  })\r\n\r\n  function handleChange({ target }) {\r\n    if (target.checked) {\r\n      setStatus([...status, target.value]);\r\n    } else {\r\n      setStatus(status.filter((item) => item !== target.value));\r\n    }\r\n  }\r\n\r\n  const handleChecked = (item) => { return status.includes(item); }\r\n\r\n  const handleBack = () => navigate('/ferramentas/manutencaoDiploma');\r\n\r\n  const handleCheckedType = ({ target }) => setType(target.checked);\r\n\r\n  // const handleCpf = ({ target }) => valida(target.value);\r\n  return (\r\n    <div className=\"row justify-content-end container animeLeft\">\r\n      <div className=\"col-10\">\r\n        <div class='titleGrid'><h1 className=\"mt-2 login title\" >Manutenção Diploma</h1></div>\r\n\r\n        <div className='content'>\r\n          <AlertSucess texto=' Registro Cadastrado com sucesso !' show={showAlertSuccessRegister} className='col-md-10' onClick={() => setShowAlertSuccessRegister(false)}></AlertSucess>\r\n          <AlertError texto='Houve um erro no seu Cadastro !' show={showAlertErrorRegister} className='col-md-10' onClick={() => setShowAlertErrorRegister(false)}></AlertError>\r\n          <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"10\" label='Nome do Aluno' name='name' register={register({ required: true })} value={name} type='text' textoErro={errors.name && \"Campo Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"5\" label='CPF' name='cpf' size='lg' register={maskedCPFRef} value={cpf} type='text' placeholder=\" Número do CPF\" textoErro={errors.cpf && \"Campo Cpf é obrigatório\"} onChange={(event) => setCpf(event.target.value)}></Input>\r\n              <Input lg=\"5\" label='RG' name='rg' size='lg' register={register({ required: true })} value={rg} type='text' placeholder=\" Número do RG\" textoErro={errors.rg && \"Campo RG é obrigatório\"} onChange={(event) => setRg(event.target.value)}></Input>\r\n            </Form.Row>\r\n            <Form.Row >\r\n              <Input size='lg' lg=\"10\" label='Nome do Pai' name='nameFather' register={register({ required: true })} value={nameFather} type='text' textoErro={errors.nameFather && \"Campo Nome do Pai é obrigatória\"} placeholder='Nome do Pai' onChange={(event) => setNameFather(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row >\r\n              <Input size='lg' lg=\"10\" label='Nome da Mãe' name='nameMother' register={register({ required: true })} value={nameFather} type='text' textoErro={errors.nameMother && \"Campo Nome da Mãe é obrigatória\"} placeholder='Nome da Mãe' onChange={(event) => setNameMother(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Select lg='5' size='lg' label='País' value={country} name='country' register={register({ required: true })} options={['Brasil', 'Português']} textoErro={errors.country && \"Campo País é obrigatório\"} onChange={({ target }) => setCountry(target.value)}></Select>\r\n              <Select lg='5' size='lg' label='Estado' value={state} name='state' register={register({ required: true })} options={['Minas Gerais', 'São Paulo', 'Rio de Janeiro']} textoErro={errors.state && \"Campo Estado é obrigatório\"} onChange={({ target }) => setState(target.value)}></Select>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Select lg='5' size='lg' label='Cidade' value={city} name='city' register={register({ required: true })} options={['BH', 'Rio']} textoErro={errors.city && \"Campo Cidade é obrigatório\"} onChange={({ target }) => setCity(target.value)}></Select>\r\n              <Input size='lg' lg=\"5\" label='Data de Nascimento' name='dateBirth' register={register({ required: true })} value={dateBirth} type='date' textoErro={errors.dateBirth && \"Campo data de Nascimento é obrigatório\"} onChange={(event) => setDateBirth(event.target.value)}></Input>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"5\" label='Matrícula' name='ra' register={register({ required: true })} value={ra} type='text' textoErro={errors.ra && \"Campo Matrícula é obrigatório\"} placeholder='Número da Matrícula' onChange={(event) => setRa(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"5\" label='Data da Inclusão' name='dateInclusion' register={register({ required: true })} value={dateInclusion} type='date' textoErro={errors.dateInclusion && \"Campo Data de Inclusão é obrigatório\"} onChange={(event) => setDateInclusion(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Select lg='5' size='lg' label='Instituição' value={institution} name='institution' register={register({ required: true })} options={['UEMG', 'UFMG', 'UFLA']} textoErro={errors.institution && \"Campo Instituição é obrigatório\"} onChange={({ target }) => setInstitution(target.value)}></Select>\r\n              <Select lg='5' size='lg' label='Curso' value={course} name='course' register={register({ required: true })} options={['Engenharia', 'Português', 'Matemática']} textoErro={errors.course && \"Campo Curso é obrigatório\"} onChange={({ target }) => setCourse(target.value)}></Select>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Select lg='5' size='lg' label='Grau do curso' value={level} name='level' register={register({ required: true })} options={['Graduação', 'Pós Graduação', 'Apostila']} textoErro={errors.level && \"Campo Grau do Curso  é obrigatório\"} onChange={({ target }) => setLevel(target.value)}></Select>\r\n              <Select lg='5' size='lg' label='Habilitacao' value={modality} name='modality' register={register({ required: true })} options={['Bacheralado', 'Licenciatura', 'Tecnólogo']} textoErro={errors.modality && \"Campo Habilitação é obrigatório\"} onChange={({ target }) => setModality(target.value)}></Select>\r\n            </Form.Row>\r\n\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} lg=\"10\">\r\n                <Form.Label className='mr-3'>Tipo</Form.Label>\r\n                <Form.Check inline type='checkbox' ref={register({ required: false })} name='type' value=\"type\" onChange={handleCheckedType} label='Apostilamento' />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Label className='mr-3' >Registro de 2º Via</Form.Label>\r\n            <Form.Check type='radio' inline ref={register({ required: true })} name='copyRegistration' value=\"nao\" checked={copyRegistration === 'nao'} onChange={({ target }) => setCopyRegistration(target.value)} label='Não' />\r\n            <Form.Check type='radio' inline ref={register({ required: true })} name='copyRegistration' value=\"sim\" checked={copyRegistration === 'sim'} onChange={({ target }) => setCopyRegistration(target.value)} label='Sim' />\r\n            <Form.Text className='error'><p>{errors.copyRegistration && \"Campo Sexo é obrigatório\"}</p></Form.Text>\r\n\r\n            <Form.Label className='mr-2'>Documento Estrangeiro</Form.Label>\r\n            <Form.Check type='radio' inline ref={register({ required: true })} name='foreignDocument' value=\"nao\" checked={foreignDocument === 'nao'} onChange={({ target }) => setForeignDocument(target.value)} label='Não' />\r\n            <Form.Check type='radio' inline  ref={register({ required: true })} name='foreignDocument' value=\"sim\" checked={foreignDocument === 'sim'} onChange={({ target }) => setForeignDocument(target.value)} label='Sim' />\r\n            <Form.Text className='error'><p>{errors.foreignDocument && \"Campo Sexo é obrigatório\"}</p></Form.Text>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"5\" label='Num. de Passaporte' name='passaport' register={register({ required: true })} value={passaport} type='number' textoErro={errors.passaport && \"Campo Num. de Passaporte é obrigatório\"} onChange={(event) => setPassaport(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"5\" label='Ano/Semestre Letivo de Conclusão ' name='semesterYearConclusion' register={register({ required: true })} value={semesterYearConclusion} type='text' textoErro={errors.semesterYearConclusion && \"Campo Ano/Semestre Letivo de Conclusão é obrigatório\"} onChange={(event) => setSemesterYearConclusion(event.target.value)}></Input>\r\n\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"5\" label='Data Colação De Grau' name='dateGraduation' register={register({ required: true })} value={dateGraduation} type='date' textoErro={errors.dateGraduation && \"Campo Data inicial é obrigatória\"} onChange={(event) => setDateGraduation(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"5\" label='Data Expedição' name='dateDispatch' register={register({ required: true })} value={dateDispatch} type='date' textoErro={errors.dateGraduation && \"Campo Data Expedição é obrigatória\"} onChange={(event) => setDateDispatch(event.target.value)}></Input>\r\n\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"3\" label='Num. Processo' name='processNumber' register={register({ required: true })} value={processNumber} type='text' textoErro={errors.processNumber && \"Campo Num. Processo é obrigatório\"} onChange={(event) => setProcessNumber(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"3\" label='Num. Processo 1' name='processNumber1' register={register({ required: true })} value={processNumber1} type='text' textoErro={errors.processNumber1 && \"Campo Num. Processo 1 é obrigatório\"} onChange={(event) => setProcessNumber1(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"4\" label='Num. Processo 2' name='processNumber2' register={register({ required: true })} value={processNumber2} type='text' textoErro={errors.processNumber2 && \"Campo Num. Processo 2 é obrigatório\"} onChange={(event) => setProcessNumber2(event.target.value)}></Input>\r\n\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"3\" label='Num. Registro' name='registerNumber' register={register({ required: true })} value={registerNumber} type='text' textoErro={errors.processNumber && \"Campo Num. Registro 1 é obrigatório\"} onChange={(event) => setRegisterNumber(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"3\" label='Livro' name='book' register={register({ required: true })} value={book} type='text' textoErro={errors.book && \"Campo Livro é obrigatório\"} onChange={(event) => setBook(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"4\" label='Página' name='sheetNumber' register={register({ required: true })} value={sheetNumber} type='text' textoErro={errors.sheetNumber && \"Campo Página é obrigatório\"} onChange={(event) => setSheetNumber(event.target.value)}></Input>\r\n\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"3\" label='Num.Lote' name='lotNumber' register={register({ required: true })} value={lotNumber} textoErro={errors.lotNumber && \"Campo Num.Lote é obrigatório\"} onChange={(event) => setLotNumber(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"3\" label='Num.Selo' name='sealNumber' register={register({ required: true })} value={sealNumber} textoErro={errors.sealNumber && \"Campo Num.Selo é obrigatório\"} onChange={(event) => setSealNumber(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"4\" label='Data de Registro' type='date' name='registrationDate' register={register({ required: true })} value={registrationDate} textoErro={errors.registrationDate && \"Campo Data de Registro é obrigatória\"} onChange={(event) => setRegistrationDate(event.target.value)}></Input>\r\n\r\n\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Input size='lg' type='date' lg=\"5\" label='Data Selo' name='sealDate' register={register({ required: true })} value={sealDate} textoErro={errors.lotNumber && \"Campo Data Selo é obrigatório\"} onChange={(event) => setSealDate(event.target.value)}></Input>\r\n              <Select lg='5' size='lg' label='Situação' value={status} name='status' register={register({ required: true })} options={['Cadastro', 'Em Análise', 'Aguardando Recebimento', 'Registrado', 'P/Pro Reitor(a)', 'Assin. Pro Reitor(a)', 'P/Reitor(a)', 'Assin. Reitor(a)', 'Liberado', 'Em Diligência']} textoErro={errors.status && \"Campo Situação é obrigatório\"} onChange={({ target }) => setStatus(target.value)}></Select>\r\n            </Form.Row>\r\n\r\n            <Form.Group as={Col} lg=\"10\">\r\n              <Form.Label>Situação2</Form.Label>\r\n              <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value=\"faltaDocumentosPessoais\" checked={handleChecked('faltaDocumentosPessoais')} onChange={handleChange} label='Falta Documentos Pessoais' />\r\n              <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='reconhecimentoCursoVencido' checked={handleChecked('reconhecimentoCursoVencido')} onChange={handleChange} label='Reconhecimento do Curso Vencido' />\r\n              <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='erroDiploma' checked={handleChecked('erroDiploma')} onChange={handleChange} label='Erro No Diploma' />\r\n              <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='erroTrancreverCarimboRegistroDiploma' checked={handleChecked('erroTrancreverCarimboRegistroDiploma')} onChange={handleChange} label='Erro ao Trancrever para o Carimbo de Registro no Diploma' />\r\n              <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='DAEValorInferiorCorrespondente' checked={handleChecked('DAEValorInferiorCorrespondente')} onChange={handleChange} label='DAE com Valor Inferior ao Correspondente de R$ 77,33' />\r\n              <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='erroHistorico' checked={handleChecked('erroHistorico')} onChange={handleChange} label='Erro no Histórico' />\r\n              <Form.Text className='error'><p>{errors.checkbox && \"Campo Situação2 é obrigatório\"}</p></Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Row>\r\n              <Textarea label='Observação' name='note' value={note} ref={register({ required: true })} lg='11' rows={4} size='lg' className='mt-3' onChange={(event) => setNote(event.target.value)}></Textarea>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"5\" label='Marca' name='brand' register={register({ required: true })} value={brand} textoErro={errors.brand && \"Campo Marca é obrigatório\"} onChange={(event) => setBrand(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"5\" label='Status' name='statusInput' register={register({ required: true })} value={statusInput} textoErro={errors.statusInput && \"Campo Status é obrigatório\"} onChange={(event) => setStatusInput(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"10\" label='Complemento' name='complement' register={register({ required: true })} value={complement} textoErro={errors.complement && \"Campo Complemento é obrigatório\"} onChange={(event) => setComplement(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            {loading ? (<Button size='lg' disabled className=\" mt-3 \" variant=\"primary\" type=\"submit\"> Aguarde...</Button>\r\n            ) : (<Button size='lg' className=\" mt-3  mb-4 mr-2 \" variant=\"primary\" type=\"submit\"> Pesquisar </Button>)}\r\n            <Button size='lg' className=\" mt-3 mb-4 mr-2 \" variant=\"secondary\" type=\"submit\" > Salvar </Button>\r\n            <Button size='lg' className=\" mt-3 mb-4 \" variant=\"secondary\" type=\"submit\" onClick={handleBack}> Voltar </Button>\r\n\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ManutencaoDiplomaAlterar\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Consultas\\DiplomaVisualizar.js",["329","330","331","332","333","334","335","336","337","338","339","340","341"],"import React from 'react'\r\nimport useMaskInput from 'use-mask-input';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Alert from 'react-bootstrap/Alert';\r\n// import { event } from 'jquery';\r\nimport { nativeTouchData } from 'react-dom/test-utils';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport Acordeao from '../Acordeao';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\nimport Input from '../Form/Input';\r\nimport Select from '../Form/Select';\r\nimport Textarea from '../Form/Textarea';\r\n// import {valida_cpf , valida} from '../validaCpf';\r\n\r\nconst DiplomaVisualizar = () => {\r\n  const [name, setName] = React.useState('');\r\n  const [cpf, setCpf] = React.useState('');\r\n  const [nameFather, setNameFather] = React.useState('');\r\n  const [nameMother, setNameMother] = React.useState('');\r\n  const [nationality, setNationality] = React.useState('');\r\n  const [state, setState] = React.useState('');\r\n  const [ra, setRa] = React.useState('');\r\n  const [diplomaTypes, setDiplomaTypes] = React.useState('');\r\n  const [course, setCourse] = React.useState('');\r\n  const [modality, setModality] = React.useState('');\r\n  // const [level, setLevel] = React.useState('');\r\n  const [yearConclusion, setYearConclusion] = React.useState('');\r\n  const [dateGraduation, setDateGraduation] = React.useState('');\r\n  const [processNumber, setProcessNumber] = React.useState('');\r\n  const [processNumber1, setProcessNumber1] = React.useState('');\r\n  const [processNumber2, setProcessNumber2] = React.useState('');\r\n  const [registerNumber, setRegisterNumber] = React.useState('');\r\n  const [book, setBook] = React.useState('');\r\n  const [sheetNumber, setSheetNumber] = React.useState('');\r\n  const [registrationDate, setRegistrationDate] = React.useState('');\r\n  const [lotNumber, setLotNumber] = React.useState('');\r\n  const [status, setStatus] = React.useState([]);\r\n  const [note, setNote] = React.useState('');\r\n  const [showAlertSuccessRegister, setShowAlertSuccessRegister] = React.useState(true);\r\n  const [showAlertErrorRegister, setShowAlertErrorRegister] = React.useState(true);\r\n\r\n  const [loading, setLoading] = React.useState('');\r\n  // const [erroCpf, setErroCpf] = React.useState('');\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const navigate = useNavigate();\r\n\r\n  // simulando dados do banco \r\n  const [dados, setDados] = React.useState([\r\n    { id: '1', aluno: 'luk', instituição: 'UEMG', data: '01/05/10' }\r\n  ]);\r\n\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  const maskedCPFRef = useMaskInput({\r\n    mask: ['999.999.999-99'],\r\n    register: register({ required: true }),\r\n  })\r\n\r\n  const handleBack = () => navigate('/consulta/diplomas/');\r\n\r\n  function handleChange({ target }) {\r\n    if (target.checked) {\r\n      setStatus([...status, target.value]);\r\n    } else {\r\n      setStatus(status.filter((item) => item !== target.value));\r\n    }\r\n  }\r\n\r\n  const handleChecked = (item) => { return status.includes(item); }\r\n\r\n  // const handleCpf = ({ target }) => valida(target.value);\r\n\r\n  return (\r\n    <div className=\"row justify-content-end container animeLeft\">\r\n      <div className=\"col-10\">\r\n        <div class='titleGrid'><h1 className=\"mt-2 login title\" >Consulta Analítica</h1></div>\r\n\r\n        <div className='content' >\r\n          {showAlertSuccessRegister && <AlertSucess texto='Registro Cadastrado com sucesso !' show={showAlertSuccessRegister} className='col-md-10' onClick={() => setShowAlertSuccessRegister(false)}></AlertSucess>}\r\n          {showAlertErrorRegister && <AlertError texto='Houve um erro no seu Cadastro !' show={showAlertErrorRegister} className='col-md-10' onClick={() => setShowAlertErrorRegister(false)}></AlertError>}\r\n\r\n          <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"5\" label='Nome do Aluno' name='name' register={register({ required: true })} value={name} type='text' textoErro={errors.name && \"Campo Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"5\" label='CPF' name='cpf' size='lg' register={maskedCPFRef} value={cpf} type='text' placeholder=\" Número do CPF\" textoErro={errors.cpf && \"Campo Cpf é obrigatório\"} onChange={(event) => setCpf(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row >\r\n              <Input size='lg' lg=\"10\" label='Nome do Pai' name='nameFather' register={register({ required: true })} value={nameFather} type='text' textoErro={errors.nameFather && \"Campo Nome do Pai é obrigatória\"} placeholder='Nome do Pai' onChange={(event) => setNameFather(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row >\r\n              <Input size='lg' lg=\"10\" label='Nome da Mãe' name='nameMother' register={register({ required: true })} value={nameFather} type='text' textoErro={errors.nameMother && \"Campo Nome da Mãe é obrigatória\"} placeholder='Nome da Mãe' onChange={(event) => setNameMother(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"5\" label='Naturalidade' name='nationality' register={register({ required: true })} value={nationality} type='text' textoErro={errors.nationality && \"Campo Naturalidade é obrigatório\"} placeholder='Naturalidade' onChange={(event) => setNationality(event.target.value)}></Input>\r\n              <Select lg='5' size='lg' label='Estado' value={state} name='state' register={register({ required: true })} options={['Minas Gerais', 'São Paulo', 'Rio de Janeiro']} textoErro={errors.state && \"Campo Estado é obrigatório\"} onChange={({ target }) => setState(target.value)}></Select>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"5\" label='Matrícula' name='ra' register={register({ required: true })} value={ra} type='text' textoErro={errors.ra && \"Campo Matrícula é obrigatório\"} placeholder='Número da Matrícula' onChange={(event) => setRa(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"5\" label='Tipo Diploma' name='diplomaTypes' register={register({ required: true })} value={diplomaTypes} type='text' textoErro={errors.diplomaTypes && \"Campo Tipo Diploma é obrigatório\"} placeholder='Tipo do diploma' onChange={(event) => setDiplomaTypes(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Select lg='5' size='lg' label='Curso' value={course} name='course' register={register({ required: true })} options={['Engenharia', 'Português', 'Matemática']} textoErro={errors.course && \"Campo Curso é obrigatório\"} onChange={({ target }) => setCourse(target.value)}></Select>\r\n              <Select lg='5' size='lg' label='Habilitacao' value={modality} name='modality' register={register({ required: true })} options={['Bacheralado', 'Licenciatura', 'Tecnólogo']} textoErro={errors.modality && \"Campo Habilitação é obrigatório\"} onChange={({ target }) => setModality(target.value)}></Select>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"3\" label='Ano Conclusão ' name='yearConclusion' register={register({ required: true })} value={yearConclusion} type='text' textoErro={errors.yearConclusion && \"Campo Ano Conclusão é obrigatório\"} onChange={(event) => setYearConclusion(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"3\" label='Data Colação De Grau' name='dateGraduation' register={register({ required: true })} value={dateGraduation} type='date' textoErro={errors.dateGraduation && \"Data inicial é obrigatória\"} onChange={(event) => setDateGraduation(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"4\" label='Num. Processo' name='processNumber' register={register({ required: true })} value={processNumber} type='text' textoErro={errors.processNumber && \"Campo Num. Processo é obrigatório\"} onChange={(event) => setProcessNumber(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"3\" label='Num. Processo 1' name='processNumber1' register={register({ required: true })} value={processNumber1} type='text' textoErro={errors.processNumber1 && \"Campo Num. Processo 1 é obrigatório\"} onChange={(event) => setProcessNumber1(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"3\" label='Num. Processo 2' name='processNumber2' register={register({ required: true })} value={processNumber2} type='text' textoErro={errors.processNumber2 && \"Campo Num. Processo 2 é obrigatório\"} onChange={(event) => setProcessNumber2(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"4\" label='Num. Registro' name='registerNumber' register={register({ required: true })} value={registerNumber} type='text' textoErro={errors.processNumber && \"Campo Num. Registro 1 é obrigatório\"} onChange={(event) => setRegisterNumber(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Input size='lg' lg=\"3\" label='Livro' name='book' register={register({ required: true })} value={book} type='text' textoErro={errors.book && \"Campo Livro é obrigatório\"} onChange={(event) => setBook(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"3\" label='Num.Lote' name='lotNumber' register={register({ required: true })} value={lotNumber} textoErro={errors.lotNumber && \"Campo Num.Lote é obrigatório\"} onChange={(event) => setLotNumber(event.target.value)}></Input>\r\n              <Input size='lg' lg=\"4\" label='Data de Registro' name='registrationDate' register={register({ required: true })} value={registrationDate} textoErro={errors.registrationDate && \"Campo Data de Registro é obrigatória\"} onChange={(event) => setRegistrationDate(event.target.value)}></Input>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Select lg='5' size='lg' label='Situação' value={status} name='status' register={register({ required: true })} options={['Liberado', 'Em Diligência']} textoErro={errors.status && \"Campo Situação é obrigatório\"} onChange={({ target }) => setStatus(target.value)}></Select>\r\n            </Form.Row>\r\n\r\n            <Form.Group as={Col} lg=\"12\">\r\n              <Form.Label>Situação2</Form.Label>\r\n              <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value=\"faltaDocumentosPessoais\" checked={handleChecked('faltaDocumentosPessoais')} onChange={handleChange} label='Falta Documentos Pessoais' />\r\n              <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='reconhecimentoCursoVencido' checked={handleChecked('reconhecimentoCursoVencido')} onChange={handleChange} label='Reconhecimento do Curso Vencido' />\r\n              <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='erroDiploma' checked={handleChecked('erroDiploma')} onChange={handleChange} label='Erro No Diploma' />\r\n              <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='erroTrancreverCarimboRegistroDiploma' checked={handleChecked('erroTrancreverCarimboRegistroDiploma')} onChange={handleChange} label='Erro ao Trancrever para o Carimbo de Registro no Diploma' />\r\n              <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='DAEValorInferiorCorrespondente' checked={handleChecked('DAEValorInferiorCorrespondente')} onChange={handleChange} label='DAE com Valor Inferior ao Correspondente de R$ 77,33' />\r\n              <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='erroHistorico' checked={handleChecked('erroHistorico')} onChange={handleChange} label='Erro no Histórico' />\r\n              <Form.Text className='error'><p>{errors.checkbox && \"Campo Situação2 é obrigatório\"}</p></Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Row>\r\n              <Textarea label='Observação' name='note' lg='10' rows={4} size='lg' className='mt-3' register={register({ required: true })} onChange={({ target }) => setNote(target.value)} textoErro={errors.note && \"Campo Situação é obrigatório\"}></Textarea>\r\n            </Form.Row>\r\n\r\n            {loading ? (<Button size='lg' disabled className=\" mt-3 \" variant=\"warning\" type=\"submit\"> Pesquisando...</Button>\r\n            ) : (<Button size='lg' className=\" mt-3 mr-2 \" variant=\"warning\" type=\"submit\"> Pesquisar </Button>)}\r\n            <Button size='lg' className=\" mt-3 \" variant=\"secondary\" type=\"submit\" onClick={handleBack}> Voltar </Button>\r\n\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default DiplomaVisualizar\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Form\\Textarea.js",[],"C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\IncluirCursoOfertado.js",["342","343","344","345","346","347","348","349","350","351","352","353","354","355"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FaUserEdit } from 'react-icons/fa';\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Input from '../Form/Input';\r\nimport ModalEditar from '../Form/Modal/ModalEditar';\r\nimport ModalConfirmarExclusao from '../Form/Modal/ModalConfirmarExclusao';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\nimport Select from '../Form/Select';\r\nimport Textarea from '../Form/Textarea';\r\n\r\nconst IncluirCursoOfertado = () => {\r\n    const [dados, setDados] = React.useState([\r\n        { id: '1', institution: 'UFLA', name: 'Engenharia', habilitacao: 'habilitacao', level: 'level', modality: 'modality' },\r\n        { id: '2', institution: 'UEMG', name: 'Português', habilitacao: 'habilitacao', level: 'level', modality: 'modality' }\r\n    ]);\r\n    const [name, setName] = React.useState('');\r\n    const [institution, setInstitution] = React.useState('');\r\n    const [courseCode, setCourseCode] = React.useState('');\r\n    const [type, setType] = React.useState('');\r\n    const [numberQualifications, setNumberQualifications] = React.useState('');\r\n    const [qualifications, setQualifications] = React.useState('');\r\n    const [note, setNote] = React.useState('');\r\n    const [noRecord, setNoRecord] = React.useState(false);\r\n    const [loading, setLoading] = React.useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [showExcluir, setShowExcluir] = React.useState(false);\r\n    const [showAlert, setShowAlert] = React.useState(false);\r\n    const [showAlertSucessDelet, setShowAlertSucessDelet] = React.useState(false);\r\n    const [showAlertErrorDelet, setShowAlertErrorDelet] = React.useState(false);\r\n    const [table, setTable] = React.useState(false);\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const navigate = useNavigate();\r\n    const handleShowExcluir = (e, id) => setShowExcluir(true);\r\n    const handleShow = () => setShow(true);\r\n    const handleCloseExcluirCancelar = () => setShowExcluir(false);\r\n    const handleClose = () => setShow(false);\r\n    // const handleInclude = () => navigate('/cadastro/incluirCursoOfertado');\r\n      const handleBack = () => navigate('/cadastro/cursoOfertado');\r\n   \r\n    const onSubmit = (data) => {\r\n        // simulando dados do banco - início\r\n        const dados = ([\r\n            { id: '1', institution: 'UFLA', name: 'Engenharia', habilitacao: 'habilitacao', level: 'level', modality: 'modality' },\r\n            { id: '2', institution: 'UEMG', name: 'Português', habilitacao: 'habilitacao', level: 'level', modality: 'modality' }\r\n        ]);\r\n        // simulando dados do banco - fim\r\n\r\n        const dadosBanco = dados.filter((dado) => dado.institution == institution || dado.name == name);\r\n\r\n        if (dadosBanco != '') {\r\n            setTable(true);\r\n            setNoRecord(false);\r\n\r\n        } else {\r\n            setNoRecord(true);\r\n            setTable(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = (e, id) => {\r\n        const novosDados = [...dados]\r\n        novosDados.splice(novosDados.indexOf({ id }), 1);\r\n        setDados(novosDados)\r\n        setShowExcluir(false);\r\n        setTable(false)\r\n        setShowAlertSucessDelet(true)\r\n        setShowAlertErrorDelet(true)\r\n        setName('');\r\n    };\r\n    return (\r\n        <div className=\"row justify-content-end container animeLeft\">\r\n            <div className=\"col-10\">\r\n                <div className=\"container animeLeft \">\r\n                    <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Cadastro de Curso Ofertado</h1></div>\r\n\r\n                    <div className='content' >\r\n                        {showAlertSucessDelet && <AlertSucess texto='Curso Incluído com sucesso !' show={showAlertSucessDelet} className='col-md-10' onClick={() => setShowAlertSucessDelet(false)}></AlertSucess>}\r\n                        {showAlertErrorDelet && <AlertError texto='Erro na Inclusão do Curso!' show={showAlertErrorDelet} className='col-md-10' onClick={() => setShowAlertErrorDelet(false)}></AlertError>}\r\n                        <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n                            <Form.Row>\r\n                                <Input size='lg' lg='10' label='Instituição' name='institution' value={institution} type='text' register={register({ required: true })} textoErro={errors.institution && \"Nome do Instituição é obrigatório\"} placeholder='Nome da Instituição' onChange={(event) => setInstitution(event.target.value)}></Input>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Input size='lg' lg='10' label='Curso' name='name' value={name} type='text' register={register({ required: true })} textoErro={errors.name && \"Nome do Curso é obrigatório\"} placeholder='Nome do Curso' onChange={(event) => setName(event.target.value)}></Input>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Select lg='5' size='lg' label='Tipo' value={type} name='type' register={register({ required: true })} options={['tipo1', 'tipo2']} textoErro={errors.type && \"Campo Tipo é obrigatório\"} onChange={({ target }) => setType(target.value)}></Select>\r\n                                <Input size='lg' lg='5' label='QT. Qualificações' name='numberQualifications' value={name} type='text' register={register({ required: true })} textoErro={errors.name && \"Campo QT. Qualificações é obrigatório\"} onChange={(event) => setNumberQualifications(event.target.value)}></Input>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Textarea label='Habilitação' name='note' value={note} ref={register({ required: true })} lg='10' rows={3} size='lg' className='mt-3' onChange={(event) => setNote(event.target.value)}></Textarea>\r\n                            </Form.Row>\r\n\r\n                            {loading ? (<Button size='lg' disabled className=\" mt-3 mr-2\" variant=\"primary\" type=\"submit\"> Salvando...</Button>\r\n                    ) : (<Button size='lg' className=\" mt-3 mr-2\" variant=\"primary\" type=\"submit\"> Salvar </Button>)}\r\n                    {/* <Button className=\"col-lg-2 ml-3 mt-3\" variant=\"secondary\" type=\"button\" href=\"/cadastro/incluirCadastroDiploma\" > Incluir </Button> */}\r\n                    {loading ? (<Button size='lg' disabled className=\" mt-3 mr-2\" variant=\"warning\" type=\"submit\"> Pesquisando...</Button>\r\n                    ) : (<Button size='lg' className=\" mt-3 mr-2\" variant=\"warning\" type=\"submit\"> Pesquisar </Button>)}                    \r\n                    <Button  size='lg' className=\" mt-3 mr-2\" variant=\"info\">Nova Inclusão</Button>\r\n                    <Button  size='lg' className=\" mt-3 \" variant=\"secondary\" onClick={handleBack} >Voltar</Button>\r\n\r\n                        </Form>\r\n\r\n                        {table && <div > <h5 className=\"mt-5\"> Resultados Encontrados:</h5><Table striped bordered hover className=\" col-lg-10  mt-3 animeLeft\">\r\n                            <thead >\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Instituição</th>\r\n                                    <th>Curso</th>\r\n                                    <th>Habilitação</th>\r\n                                    <th>Grau</th>\r\n                                    <th>Modalidade</th>\r\n                                    <th>Opções</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {table && dados\r\n                                    .filter((dado) => dado.institution == institution || dado.name == name).map(({ id, institution, name, habilitacao, level, modality }) => (\r\n                                        <tr key={id}>\r\n                                            <td>{id}</td>\r\n                                            <td>{institution}</td>\r\n                                            <td>{name}</td>\r\n                                            <td>{habilitacao}</td>\r\n                                            <td>{level}</td>\r\n                                            <td>{modality}</td>\r\n\r\n                                            <td>\r\n\r\n                                                <FaUserEdit size='2em' color='#3c6178' title=\"Editar\" onClick={handleShow} ></FaUserEdit >\r\n                                                <RiDeleteBin6Line className='ml-3 mt-1' size='1.9em' color='#c32b3f' title=\"Excluir\" onClick={handleShowExcluir}></RiDeleteBin6Line>\r\n                                                {/* <FaTrashAlt className='deletar-icons ' title=\"Excluir\" onClick={handleShowExcluir} ></FaTrashAlt> */}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        </Table> </div>}\r\n                        {noRecord && <div className='mt-5 mb-5' style={{ color: \"#c32b3f\" }}><h3>Nenhum registro Encontrado</h3></div>}\r\n\r\n                    </div>\r\n\r\n                    <ModalEditar show={show} onHide={handleClose} className='subtitleModal ' texto='Editar Cadastro de Diplomas' onClick={handleClose}>\r\n                        <Form className=\"mt-4 container\">\r\n                            <Form.Row>\r\n                                <Input size='lg' lg='10' label='Instituição' name='institution' value={institution} type='text' register={register({ required: true })} textoErro={errors.institution && \"Nome do Instituição é obrigatório\"} placeholder='Nome da Instituição' onChange={(event) => setInstitution(event.target.value)}></Input>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Input size='lg' lg='10' label='Curso' name='name' value={name} type='text' register={register({ required: true })} textoErro={errors.name && \"Nome do Curso é obrigatório\"} placeholder='Nome do Curso' onChange={(event) => setName(event.target.value)}></Input>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Select lg='5' size='lg' label='Tipo' value={type} name='type' register={register({ required: true })} options={['tipo1', 'tipo2']} textoErro={errors.type && \"Campo Tipo é obrigatório\"} onChange={({ target }) => setType(target.value)}></Select>\r\n                                <Input size='lg' lg='5' label='QT. Qualificações' name='numberQualifications' value={name} type='text' register={register({ required: true })} textoErro={errors.name && \"Campo QT. Qualificações é obrigatório\"} onChange={(event) => setNumberQualifications(event.target.value)}></Input>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Textarea label='Habilitação' name='note' value={note} ref={register({ required: true })} lg='10' rows={4} size='lg' className='mt-3' onChange={(event) => setNote(event.target.value)}></Textarea>\r\n                            </Form.Row>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}> Fechar </Button>\r\n                                <Button variant=\"primary\">Salvar alterações</Button>\r\n                            </Modal.Footer>\r\n                        </Form>\r\n                    </ModalEditar>\r\n\r\n                    <ModalConfirmarExclusao showExcluir={showExcluir} onHide={handleCloseExcluirCancelar} className='subtitleModal'\r\n                        cancelar={handleCloseExcluirCancelar} delet={(e) => handleDelete()} texto='Tem certeza que deseja excluir o item selecionado !' > </ModalConfirmarExclusao>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncluirCursoOfertado\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Cadastros\\IncluirCadastroCurso.js",["356","357","358","359","360","361","362","363"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FaUserEdit } from 'react-icons/fa';\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Input from '../Form/Input';\r\nimport ModalEditar from '../Form/Modal/ModalEditar';\r\nimport ModalConfirmarExclusao from '../Form/Modal/ModalConfirmarExclusao';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\nimport Select from '../Form/Select';\r\n\r\nconst IncluirCadastroCurso = () => {\r\n    const [name, setName] = React.useState('');\r\n    // const [dados, setDados] = React.useState([{''} ]);\r\n    const [dados, setDados] = React.useState([\r\n        { id: '1', name: 'Engenharia' },\r\n        { id: '2', name: 'Português' }\r\n    ]);\r\n    const [book, setBook] = React.useState('');\r\n    const [courseCode, setCourseCode] = React.useState('');\r\n    const [noRecord, setNoRecord] = React.useState(false);\r\n    const [loading, setLoading] = React.useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [showExcluir, setShowExcluir] = React.useState(false);\r\n    const [showAlert, setShowAlert] = React.useState(false);\r\n    const [showAlertSucessDelet, setShowAlertSucessDelet] = React.useState(false);\r\n    const [showAlertErrorDelet, setShowAlertErrorDelet] = React.useState(false);\r\n    const [table, setTable] = React.useState(false);\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const navigate = useNavigate();\r\n    const handleShowExcluir = (e, id) => setShowExcluir(true);\r\n    const handleShow = () => setShow(true);\r\n    const handleCloseExcluirCancelar = () => setShowExcluir(false);\r\n    const handleClose = () => setShow(false);\r\n    // const handleInclude = () => navigate('');\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        // simulando dados do banco - início\r\n        const dados = ([\r\n            { id: '1', name: 'Engenharia' },\r\n            { id: '2', name: 'Português' }\r\n        ]);\r\n        // simulando dados do banco - fim\r\n\r\n        const dadosBanco = dados.filter((dado) => dado.name == name);\r\n\r\n        if (dadosBanco != '') {\r\n            setTable(true);\r\n            setNoRecord(false);\r\n\r\n        } else {\r\n            setNoRecord(true);\r\n            setTable(false);\r\n        }\r\n\r\n    };\r\n\r\n    const handleDelete = (e, id) => {\r\n        const novosDados = [...dados]\r\n        novosDados.splice(novosDados.indexOf({ id }), 1);\r\n        setDados(novosDados)\r\n        setShowExcluir(false);\r\n        setTable(false)\r\n        setShowAlertSucessDelet(true)\r\n        setShowAlertErrorDelet(true)\r\n        setName('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"row justify-content-end container animeLeft\">\r\n        <div className=\"col-10\">\r\n            <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Cadastro de Curso</h1></div>\r\n\r\n            <div className='content' >\r\n                {showAlertSucessDelet && <AlertSucess texto='Registro Excluído com sucesso !' show={showAlertSucessDelet} className='col-md-10' onClick={() => setShowAlertSucessDelet(false)}></AlertSucess>}\r\n                {showAlertErrorDelet && <AlertError texto='Erro na Exclusão do registro !' show={showAlertErrorDelet} className='col-md-10' onClick={() => setShowAlertErrorDelet(false)}></AlertError>}\r\n                <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n\r\n                <Form.Row>\r\n                        <Input size='lg' lg='10' label='Curso' name='name' type='text' register={register({ required: true })} textoErro={errors.name && \"Nome do Curso é obrigatório\"} onChange={(event) => setName(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Select lg='5' size='lg' label='Livro' value={book} name='book' register={register({ required: true })} options={['DSRD-8', 'DSRD-7']} textoErro={errors.book && \"Campo Livro é obrigatório\"} onChange={({ target }) => setBook(target.value)}></Select>\r\n                        <Select lg='5' size='lg' label='Código do Curso' value={courseCode} name='courseCode' register={register({ required: true })} options={['112', '113']} textoErro={errors.courseCode && \"Campo Código do Curso é obrigatório\"} onChange={({ target }) => setCourseCode(target.value)}></Select>\r\n                    </Form.Row>\r\n\r\n                    {loading ? (<Button size='lg' disabled className=\" mt-3 mr-2\" variant=\"primary\" type=\"submit\"> Salvando...</Button>\r\n                    ) : (<Button size='lg' className=\" mt-3 mr-2\" variant=\"primary\" type=\"submit\"> Salvar </Button>)}\r\n                    {/* <Button className=\"col-lg-2 ml-3 mt-3\" variant=\"secondary\" type=\"button\" href=\"/cadastro/incluirCadastroDiploma\" > Incluir </Button> */}\r\n                    {loading ? (<Button size='lg' disabled className=\" mt-3 \" variant=\"warning\" type=\"submit\"> Pesquisando...</Button>\r\n                    ) : (<Button size='lg' className=\" mt-3 \" variant=\"warning\" type=\"submit\"> Pesquisar </Button>)}                    \r\n                    <Button  size='lg' className=\" mt-3 mr-2\" variant=\"info\">Nova Inclusão</Button>\r\n <Button  size='lg' className=\" mt-3\" variant='secondary'>Voltar</Button>\r\n\r\n                </Form>\r\n\r\n                {table && <div > <h5 className=\"mt-5\"> Resultados Encontrados:</h5><Table striped bordered hover className=\" col-lg-10  mt-3 animeLeft\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th >ID</th>\r\n                            <th>Curso</th>\r\n                            <th>Opções</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {table && dados\r\n                            .filter((dado) => dado.name == name).map(({ id, name }) => (\r\n                                <tr key={id}>\r\n                                    <td>{id}</td>\r\n                                    <td>{name}</td>\r\n                                    <td>\r\n\r\n                                        <FaUserEdit size='2em' color='#3c6178' title=\"Editar\" onClick={handleShow} ></FaUserEdit >\r\n                                        <RiDeleteBin6Line className='ml-3 mt-1' size='1.9em' color='#c32b3f' title=\"Excluir\" onClick={handleShowExcluir}></RiDeleteBin6Line>\r\n                                        {/* <FaTrashAlt className='deletar-icons ' title=\"Excluir\" onClick={handleShowExcluir} ></FaTrashAlt> */}\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                    </tbody>\r\n                </Table> </div>}\r\n                {noRecord && <div className='mt-5 mb-5' style={{ color: \"#c32b3f\" }}><h3>Nenhum registro Encontrado</h3></div>}\r\n\r\n            </div>\r\n\r\n            <ModalEditar show={show} onHide={handleClose} className='subtitleModal ' texto='Editar Cadastro de Diplomas' onClick={handleClose}>\r\n                <Form className=\"mt-4 container\">\r\n                    <Form.Row>\r\n                        <Input size='lg' lg='10' label='Curso' name='name' type='text' register={register({ required: true })} textoErro={errors.name && \"Nome do Curso é obrigatório\"} onChange={(event) => setName(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Select lg='5' size='lg' label='Livro' value={book} name='book' register={register({ required: true })} options={['DSRD-8', 'DSRD-7']} textoErro={errors.book && \"Campo Livro é obrigatório\"} onChange={({ target }) => setBook(target.value)}></Select>\r\n                        <Select lg='5' size='lg' label='Código do Curso' value={courseCode} name='courseCode' register={register({ required: true })} options={['112', '113']} textoErro={errors.courseCode && \"Campo Código do Curso é obrigatório\"} onChange={({ target }) => setCourseCode(target.value)}></Select>\r\n                    </Form.Row>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}> Fechar </Button>\r\n                        <Button variant=\"primary\">Salvar</Button>\r\n                        <Button variant=\"warning\">Pesquisar</Button>\r\n                        <Button variant=\"info\">Nova Inclusão</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </ModalEditar>\r\n\r\n            <ModalConfirmarExclusao showExcluir={showExcluir} onHide={handleCloseExcluirCancelar} className='subtitleModal'\r\n                cancelar={handleCloseExcluirCancelar} delet={(e) => handleDelete()} texto='Tem certeza que deseja excluir o item selecionado !' > </ModalConfirmarExclusao>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default IncluirCadastroCurso\r\n","C:\\Users\\Windows 8\\Desktop\\diplomas\\src\\components\\Operacoes\\AnaliseDiploma.js",["364","365","366","367","368","369","370","371","372","373","374","375","376"],{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","severity":1,"message":"382","line":13,"column":8,"nodeType":"383","messageId":"384","endLine":13,"endColumn":30},{"ruleId":"381","severity":1,"message":"385","line":18,"column":8,"nodeType":"383","messageId":"384","endLine":18,"endColumn":19},{"ruleId":"381","severity":1,"message":"386","line":3,"column":8,"nodeType":"383","messageId":"384","endLine":3,"endColumn":14},{"ruleId":"381","severity":1,"message":"387","line":13,"column":12,"nodeType":"383","messageId":"384","endLine":13,"endColumn":17},{"ruleId":"381","severity":1,"message":"388","line":15,"column":21,"nodeType":"383","messageId":"384","endLine":15,"endColumn":31},{"ruleId":"381","severity":1,"message":"389","line":17,"column":11,"nodeType":"383","messageId":"384","endLine":17,"endColumn":28},{"ruleId":"390","severity":1,"message":"391","line":14,"column":86,"nodeType":"392","endLine":14,"endColumn":100},{"ruleId":"381","severity":1,"message":"386","line":3,"column":8,"nodeType":"383","messageId":"384","endLine":3,"endColumn":14},{"ruleId":"381","severity":1,"message":"393","line":4,"column":10,"nodeType":"383","messageId":"384","endLine":4,"endColumn":14},{"ruleId":"381","severity":1,"message":"394","line":5,"column":8,"nodeType":"383","messageId":"384","endLine":5,"endColumn":17},{"ruleId":"381","severity":1,"message":"395","line":6,"column":8,"nodeType":"383","messageId":"384","endLine":6,"endColumn":12},{"ruleId":"381","severity":1,"message":"386","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":14},{"ruleId":"381","severity":1,"message":"396","line":8,"column":10,"nodeType":"383","messageId":"384","endLine":8,"endColumn":15},{"ruleId":"381","severity":1,"message":"397","line":8,"column":17,"nodeType":"383","messageId":"384","endLine":8,"endColumn":25},{"ruleId":"381","severity":1,"message":"398","line":9,"column":8,"nodeType":"383","messageId":"384","endLine":9,"endColumn":16},{"ruleId":"381","severity":1,"message":"399","line":2,"column":10,"nodeType":"383","messageId":"384","endLine":2,"endColumn":19},{"ruleId":"381","severity":1,"message":"400","line":7,"column":9,"nodeType":"383","messageId":"384","endLine":7,"endColumn":27},{"ruleId":"381","severity":1,"message":"401","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":13},{"ruleId":"381","severity":1,"message":"402","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":16},{"ruleId":"381","severity":1,"message":"403","line":13,"column":10,"nodeType":"383","messageId":"384","endLine":13,"endColumn":21},{"ruleId":"381","severity":1,"message":"404","line":18,"column":8,"nodeType":"383","messageId":"384","endLine":18,"endColumn":14},{"ruleId":"381","severity":1,"message":"388","line":33,"column":19,"nodeType":"383","messageId":"384","endLine":33,"endColumn":29},{"ruleId":"381","severity":1,"message":"405","line":53,"column":10,"nodeType":"383","messageId":"384","endLine":53,"endColumn":20},{"ruleId":"381","severity":1,"message":"406","line":53,"column":22,"nodeType":"383","messageId":"384","endLine":53,"endColumn":35},{"ruleId":"381","severity":1,"message":"407","line":56,"column":10,"nodeType":"383","messageId":"384","endLine":56,"endColumn":14},{"ruleId":"381","severity":1,"message":"408","line":65,"column":10,"nodeType":"383","messageId":"384","endLine":65,"endColumn":32},{"ruleId":"381","severity":1,"message":"409","line":65,"column":34,"nodeType":"383","messageId":"384","endLine":65,"endColumn":59},{"ruleId":"381","severity":1,"message":"410","line":66,"column":10,"nodeType":"383","messageId":"384","endLine":66,"endColumn":31},{"ruleId":"381","severity":1,"message":"411","line":66,"column":33,"nodeType":"383","messageId":"384","endLine":66,"endColumn":57},{"ruleId":"381","severity":1,"message":"412","line":76,"column":9,"nodeType":"383","messageId":"384","endLine":76,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":106,"column":57,"nodeType":"415","messageId":"416","endLine":106,"endColumn":59},{"ruleId":"413","severity":1,"message":"417","line":108,"column":20,"nodeType":"415","messageId":"416","endLine":108,"endColumn":22},{"ruleId":"413","severity":1,"message":"414","line":132,"column":28,"nodeType":"415","messageId":"416","endLine":132,"endColumn":30},{"ruleId":"413","severity":1,"message":"414","line":132,"column":47,"nodeType":"415","messageId":"416","endLine":132,"endColumn":49},{"ruleId":"413","severity":1,"message":"414","line":137,"column":21,"nodeType":"415","messageId":"416","endLine":137,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":140,"column":21,"nodeType":"415","messageId":"416","endLine":140,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":163,"column":45,"nodeType":"415","messageId":"416","endLine":163,"endColumn":47},{"ruleId":"381","severity":1,"message":"386","line":4,"column":8,"nodeType":"383","messageId":"384","endLine":4,"endColumn":14},{"ruleId":"381","severity":1,"message":"386","line":3,"column":8,"nodeType":"383","messageId":"384","endLine":3,"endColumn":14},{"ruleId":"381","severity":1,"message":"418","line":6,"column":8,"nodeType":"383","messageId":"384","endLine":6,"endColumn":13},{"ruleId":"381","severity":1,"message":"419","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":13},{"ruleId":"381","severity":1,"message":"420","line":9,"column":10,"nodeType":"383","messageId":"384","endLine":9,"endColumn":22},{"ruleId":"381","severity":1,"message":"402","line":11,"column":8,"nodeType":"383","messageId":"384","endLine":11,"endColumn":16},{"ruleId":"381","severity":1,"message":"421","line":14,"column":8,"nodeType":"383","messageId":"384","endLine":14,"endColumn":16},{"ruleId":"381","severity":1,"message":"405","line":33,"column":10,"nodeType":"383","messageId":"384","endLine":33,"endColumn":20},{"ruleId":"381","severity":1,"message":"406","line":33,"column":22,"nodeType":"383","messageId":"384","endLine":33,"endColumn":35},{"ruleId":"381","severity":1,"message":"407","line":36,"column":10,"nodeType":"383","messageId":"384","endLine":36,"endColumn":14},{"ruleId":"381","severity":1,"message":"388","line":47,"column":19,"nodeType":"383","messageId":"384","endLine":47,"endColumn":29},{"ruleId":"381","severity":1,"message":"422","line":52,"column":10,"nodeType":"383","messageId":"384","endLine":52,"endColumn":15},{"ruleId":"381","severity":1,"message":"423","line":52,"column":17,"nodeType":"383","messageId":"384","endLine":52,"endColumn":25},{"ruleId":"381","severity":1,"message":"424","line":56,"column":9,"nodeType":"383","messageId":"384","endLine":56,"endColumn":19},{"ruleId":"381","severity":1,"message":"425","line":4,"column":8,"nodeType":"383","messageId":"384","endLine":4,"endColumn":11},{"ruleId":"381","severity":1,"message":"388","line":28,"column":21,"nodeType":"383","messageId":"384","endLine":28,"endColumn":31},{"ruleId":"381","severity":1,"message":"426","line":31,"column":12,"nodeType":"383","messageId":"384","endLine":31,"endColumn":21},{"ruleId":"381","severity":1,"message":"427","line":31,"column":23,"nodeType":"383","messageId":"384","endLine":31,"endColumn":35},{"ruleId":"413","severity":1,"message":"414","line":52,"column":61,"nodeType":"415","messageId":"416","endLine":52,"endColumn":63},{"ruleId":"413","severity":1,"message":"417","line":54,"column":24,"nodeType":"415","messageId":"416","endLine":54,"endColumn":26},{"ruleId":"413","severity":1,"message":"414","line":107,"column":61,"nodeType":"415","messageId":"416","endLine":107,"endColumn":63},{"ruleId":"381","severity":1,"message":"425","line":4,"column":8,"nodeType":"383","messageId":"384","endLine":4,"endColumn":11},{"ruleId":"381","severity":1,"message":"402","line":11,"column":8,"nodeType":"383","messageId":"384","endLine":11,"endColumn":16},{"ruleId":"381","severity":1,"message":"428","line":35,"column":22,"nodeType":"383","messageId":"384","endLine":35,"endColumn":33},{"ruleId":"381","severity":1,"message":"388","line":36,"column":21,"nodeType":"383","messageId":"384","endLine":36,"endColumn":31},{"ruleId":"381","severity":1,"message":"426","line":41,"column":12,"nodeType":"383","messageId":"384","endLine":41,"endColumn":21},{"ruleId":"381","severity":1,"message":"427","line":41,"column":23,"nodeType":"383","messageId":"384","endLine":41,"endColumn":35},{"ruleId":"413","severity":1,"message":"414","line":167,"column":68,"nodeType":"415","messageId":"416","endLine":167,"endColumn":70},{"ruleId":"381","severity":1,"message":"425","line":4,"column":8,"nodeType":"383","messageId":"384","endLine":4,"endColumn":11},{"ruleId":"381","severity":1,"message":"402","line":11,"column":8,"nodeType":"383","messageId":"384","endLine":11,"endColumn":16},{"ruleId":"381","severity":1,"message":"388","line":29,"column":21,"nodeType":"383","messageId":"384","endLine":29,"endColumn":31},{"ruleId":"381","severity":1,"message":"426","line":32,"column":12,"nodeType":"383","messageId":"384","endLine":32,"endColumn":21},{"ruleId":"381","severity":1,"message":"427","line":32,"column":23,"nodeType":"383","messageId":"384","endLine":32,"endColumn":35},{"ruleId":"413","severity":1,"message":"414","line":52,"column":68,"nodeType":"415","messageId":"416","endLine":52,"endColumn":70},{"ruleId":"413","severity":1,"message":"414","line":52,"column":96,"nodeType":"415","messageId":"416","endLine":52,"endColumn":98},{"ruleId":"413","severity":1,"message":"417","line":54,"column":24,"nodeType":"415","messageId":"416","endLine":54,"endColumn":26},{"ruleId":"413","severity":1,"message":"414","line":113,"column":64,"nodeType":"415","messageId":"416","endLine":113,"endColumn":66},{"ruleId":"413","severity":1,"message":"414","line":113,"column":92,"nodeType":"415","messageId":"416","endLine":113,"endColumn":94},{"ruleId":"381","severity":1,"message":"425","line":4,"column":8,"nodeType":"383","messageId":"384","endLine":4,"endColumn":11},{"ruleId":"381","severity":1,"message":"402","line":11,"column":8,"nodeType":"383","messageId":"384","endLine":11,"endColumn":16},{"ruleId":"381","severity":1,"message":"388","line":26,"column":21,"nodeType":"383","messageId":"384","endLine":26,"endColumn":31},{"ruleId":"381","severity":1,"message":"426","line":29,"column":12,"nodeType":"383","messageId":"384","endLine":29,"endColumn":21},{"ruleId":"381","severity":1,"message":"427","line":29,"column":23,"nodeType":"383","messageId":"384","endLine":29,"endColumn":35},{"ruleId":"413","severity":1,"message":"414","line":50,"column":68,"nodeType":"415","messageId":"416","endLine":50,"endColumn":70},{"ruleId":"413","severity":1,"message":"417","line":52,"column":24,"nodeType":"415","messageId":"416","endLine":52,"endColumn":26},{"ruleId":"413","severity":1,"message":"414","line":106,"column":68,"nodeType":"415","messageId":"416","endLine":106,"endColumn":70},{"ruleId":"381","severity":1,"message":"425","line":4,"column":8,"nodeType":"383","messageId":"384","endLine":4,"endColumn":11},{"ruleId":"381","severity":1,"message":"402","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":16},{"ruleId":"381","severity":1,"message":"388","line":13,"column":21,"nodeType":"383","messageId":"384","endLine":13,"endColumn":31},{"ruleId":"381","severity":1,"message":"425","line":4,"column":8,"nodeType":"383","messageId":"384","endLine":4,"endColumn":11},{"ruleId":"381","severity":1,"message":"419","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":13},{"ruleId":"381","severity":1,"message":"402","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":16},{"ruleId":"381","severity":1,"message":"429","line":22,"column":21,"nodeType":"383","messageId":"384","endLine":22,"endColumn":30},{"ruleId":"381","severity":1,"message":"428","line":24,"column":22,"nodeType":"383","messageId":"384","endLine":24,"endColumn":33},{"ruleId":"381","severity":1,"message":"430","line":26,"column":12,"nodeType":"383","messageId":"384","endLine":26,"endColumn":16},{"ruleId":"381","severity":1,"message":"431","line":27,"column":12,"nodeType":"383","messageId":"384","endLine":27,"endColumn":23},{"ruleId":"381","severity":1,"message":"432","line":27,"column":25,"nodeType":"383","messageId":"384","endLine":27,"endColumn":39},{"ruleId":"381","severity":1,"message":"423","line":30,"column":19,"nodeType":"383","messageId":"384","endLine":30,"endColumn":27},{"ruleId":"381","severity":1,"message":"433","line":36,"column":11,"nodeType":"383","messageId":"384","endLine":36,"endColumn":22},{"ruleId":"381","severity":1,"message":"434","line":37,"column":11,"nodeType":"383","messageId":"384","endLine":37,"endColumn":21},{"ruleId":"381","severity":1,"message":"412","line":38,"column":11,"nodeType":"383","messageId":"384","endLine":38,"endColumn":22},{"ruleId":"413","severity":1,"message":"414","line":56,"column":42,"nodeType":"415","messageId":"416","endLine":56,"endColumn":44},{"ruleId":"413","severity":1,"message":"414","line":56,"column":61,"nodeType":"415","messageId":"416","endLine":56,"endColumn":63},{"ruleId":"413","severity":1,"message":"414","line":65,"column":35,"nodeType":"415","messageId":"416","endLine":65,"endColumn":37},{"ruleId":"413","severity":1,"message":"414","line":68,"column":35,"nodeType":"415","messageId":"416","endLine":68,"endColumn":37},{"ruleId":"413","severity":1,"message":"414","line":95,"column":61,"nodeType":"415","messageId":"416","endLine":95,"endColumn":63},{"ruleId":"381","severity":1,"message":"425","line":4,"column":8,"nodeType":"383","messageId":"384","endLine":4,"endColumn":11},{"ruleId":"381","severity":1,"message":"419","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":13},{"ruleId":"381","severity":1,"message":"402","line":10,"column":8,"nodeType":"383","messageId":"384","endLine":10,"endColumn":16},{"ruleId":"381","severity":1,"message":"429","line":20,"column":21,"nodeType":"383","messageId":"384","endLine":20,"endColumn":30},{"ruleId":"381","severity":1,"message":"428","line":22,"column":22,"nodeType":"383","messageId":"384","endLine":22,"endColumn":33},{"ruleId":"381","severity":1,"message":"430","line":24,"column":12,"nodeType":"383","messageId":"384","endLine":24,"endColumn":16},{"ruleId":"381","severity":1,"message":"431","line":25,"column":12,"nodeType":"383","messageId":"384","endLine":25,"endColumn":23},{"ruleId":"381","severity":1,"message":"432","line":25,"column":25,"nodeType":"383","messageId":"384","endLine":25,"endColumn":39},{"ruleId":"381","severity":1,"message":"423","line":28,"column":19,"nodeType":"383","messageId":"384","endLine":28,"endColumn":27},{"ruleId":"381","severity":1,"message":"433","line":34,"column":11,"nodeType":"383","messageId":"384","endLine":34,"endColumn":22},{"ruleId":"381","severity":1,"message":"434","line":35,"column":11,"nodeType":"383","messageId":"384","endLine":35,"endColumn":21},{"ruleId":"381","severity":1,"message":"412","line":36,"column":11,"nodeType":"383","messageId":"384","endLine":36,"endColumn":22},{"ruleId":"413","severity":1,"message":"414","line":53,"column":42,"nodeType":"415","messageId":"416","endLine":53,"endColumn":44},{"ruleId":"413","severity":1,"message":"414","line":53,"column":61,"nodeType":"415","messageId":"416","endLine":53,"endColumn":63},{"ruleId":"413","severity":1,"message":"414","line":62,"column":35,"nodeType":"415","messageId":"416","endLine":62,"endColumn":37},{"ruleId":"413","severity":1,"message":"414","line":65,"column":35,"nodeType":"415","messageId":"416","endLine":65,"endColumn":37},{"ruleId":"413","severity":1,"message":"414","line":93,"column":61,"nodeType":"415","messageId":"416","endLine":93,"endColumn":63},{"ruleId":"381","severity":1,"message":"418","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":13},{"ruleId":"381","severity":1,"message":"419","line":8,"column":8,"nodeType":"383","messageId":"384","endLine":8,"endColumn":13},{"ruleId":"381","severity":1,"message":"401","line":9,"column":8,"nodeType":"383","messageId":"384","endLine":9,"endColumn":13},{"ruleId":"381","severity":1,"message":"435","line":11,"column":10,"nodeType":"383","messageId":"384","endLine":11,"endColumn":25},{"ruleId":"381","severity":1,"message":"402","line":14,"column":8,"nodeType":"383","messageId":"384","endLine":14,"endColumn":16},{"ruleId":"381","severity":1,"message":"436","line":26,"column":10,"nodeType":"383","messageId":"384","endLine":26,"endColumn":20},{"ruleId":"381","severity":1,"message":"437","line":27,"column":10,"nodeType":"383","messageId":"384","endLine":27,"endColumn":21},{"ruleId":"381","severity":1,"message":"438","line":27,"column":23,"nodeType":"383","messageId":"384","endLine":27,"endColumn":37},{"ruleId":"381","severity":1,"message":"407","line":39,"column":10,"nodeType":"383","messageId":"384","endLine":39,"endColumn":14},{"ruleId":"381","severity":1,"message":"388","line":63,"column":19,"nodeType":"383","messageId":"384","endLine":63,"endColumn":29},{"ruleId":"381","severity":1,"message":"422","line":69,"column":10,"nodeType":"383","messageId":"384","endLine":69,"endColumn":15},{"ruleId":"381","severity":1,"message":"423","line":69,"column":17,"nodeType":"383","messageId":"384","endLine":69,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":108,"column":62,"nodeType":"392","endLine":108,"endColumn":71},{"ruleId":"381","severity":1,"message":"418","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":13},{"ruleId":"381","severity":1,"message":"419","line":8,"column":8,"nodeType":"383","messageId":"384","endLine":8,"endColumn":13},{"ruleId":"381","severity":1,"message":"401","line":9,"column":8,"nodeType":"383","messageId":"384","endLine":9,"endColumn":13},{"ruleId":"381","severity":1,"message":"435","line":11,"column":10,"nodeType":"383","messageId":"384","endLine":11,"endColumn":25},{"ruleId":"381","severity":1,"message":"402","line":14,"column":8,"nodeType":"383","messageId":"384","endLine":14,"endColumn":16},{"ruleId":"381","severity":1,"message":"436","line":25,"column":10,"nodeType":"383","messageId":"384","endLine":25,"endColumn":20},{"ruleId":"381","severity":1,"message":"439","line":40,"column":10,"nodeType":"383","messageId":"384","endLine":40,"endColumn":21},{"ruleId":"381","severity":1,"message":"440","line":40,"column":23,"nodeType":"383","messageId":"384","endLine":40,"endColumn":37},{"ruleId":"381","severity":1,"message":"441","line":44,"column":10,"nodeType":"383","messageId":"384","endLine":44,"endColumn":14},{"ruleId":"381","severity":1,"message":"388","line":48,"column":19,"nodeType":"383","messageId":"384","endLine":48,"endColumn":29},{"ruleId":"381","severity":1,"message":"422","line":54,"column":10,"nodeType":"383","messageId":"384","endLine":54,"endColumn":15},{"ruleId":"381","severity":1,"message":"423","line":54,"column":17,"nodeType":"383","messageId":"384","endLine":54,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":91,"column":62,"nodeType":"392","endLine":91,"endColumn":71},{"ruleId":"381","severity":1,"message":"425","line":4,"column":8,"nodeType":"383","messageId":"384","endLine":4,"endColumn":11},{"ruleId":"381","severity":1,"message":"405","line":26,"column":12,"nodeType":"383","messageId":"384","endLine":26,"endColumn":22},{"ruleId":"381","severity":1,"message":"406","line":26,"column":24,"nodeType":"383","messageId":"384","endLine":26,"endColumn":37},{"ruleId":"381","severity":1,"message":"442","line":28,"column":12,"nodeType":"383","messageId":"384","endLine":28,"endColumn":32},{"ruleId":"381","severity":1,"message":"443","line":29,"column":12,"nodeType":"383","messageId":"384","endLine":29,"endColumn":26},{"ruleId":"381","severity":1,"message":"444","line":29,"column":28,"nodeType":"383","messageId":"384","endLine":29,"endColumn":45},{"ruleId":"381","severity":1,"message":"388","line":32,"column":21,"nodeType":"383","messageId":"384","endLine":32,"endColumn":31},{"ruleId":"381","severity":1,"message":"426","line":35,"column":12,"nodeType":"383","messageId":"384","endLine":35,"endColumn":21},{"ruleId":"381","severity":1,"message":"427","line":35,"column":23,"nodeType":"383","messageId":"384","endLine":35,"endColumn":35},{"ruleId":"413","severity":1,"message":"414","line":56,"column":68,"nodeType":"415","messageId":"416","endLine":56,"endColumn":70},{"ruleId":"413","severity":1,"message":"414","line":56,"column":96,"nodeType":"415","messageId":"416","endLine":56,"endColumn":98},{"ruleId":"413","severity":1,"message":"417","line":58,"column":24,"nodeType":"415","messageId":"416","endLine":58,"endColumn":26},{"ruleId":"413","severity":1,"message":"414","line":129,"column":72,"nodeType":"415","messageId":"416","endLine":129,"endColumn":74},{"ruleId":"413","severity":1,"message":"414","line":129,"column":100,"nodeType":"415","messageId":"416","endLine":129,"endColumn":102},{"ruleId":"381","severity":1,"message":"425","line":4,"column":8,"nodeType":"383","messageId":"384","endLine":4,"endColumn":11},{"ruleId":"381","severity":1,"message":"388","line":28,"column":21,"nodeType":"383","messageId":"384","endLine":28,"endColumn":31},{"ruleId":"381","severity":1,"message":"426","line":31,"column":12,"nodeType":"383","messageId":"384","endLine":31,"endColumn":21},{"ruleId":"381","severity":1,"message":"427","line":31,"column":23,"nodeType":"383","messageId":"384","endLine":31,"endColumn":35},{"ruleId":"381","severity":1,"message":"445","line":36,"column":11,"nodeType":"383","messageId":"384","endLine":36,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":52,"column":61,"nodeType":"415","messageId":"416","endLine":52,"endColumn":63},{"ruleId":"413","severity":1,"message":"417","line":54,"column":24,"nodeType":"415","messageId":"416","endLine":54,"endColumn":26},{"ruleId":"413","severity":1,"message":"414","line":115,"column":57,"nodeType":"415","messageId":"416","endLine":115,"endColumn":59},{"ruleId":"381","severity":1,"message":"401","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":13},{"ruleId":"381","severity":1,"message":"402","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":16},{"ruleId":"381","severity":1,"message":"404","line":18,"column":8,"nodeType":"383","messageId":"384","endLine":18,"endColumn":14},{"ruleId":"381","severity":1,"message":"388","line":29,"column":21,"nodeType":"383","messageId":"384","endLine":29,"endColumn":31},{"ruleId":"381","severity":1,"message":"412","line":42,"column":11,"nodeType":"383","messageId":"384","endLine":42,"endColumn":22},{"ruleId":"413","severity":1,"message":"414","line":66,"column":61,"nodeType":"415","messageId":"416","endLine":66,"endColumn":63},{"ruleId":"413","severity":1,"message":"417","line":68,"column":24,"nodeType":"415","messageId":"416","endLine":68,"endColumn":26},{"ruleId":"381","severity":1,"message":"446","line":78,"column":11,"nodeType":"383","messageId":"384","endLine":78,"endColumn":24},{"ruleId":"413","severity":1,"message":"414","line":91,"column":42,"nodeType":"415","messageId":"416","endLine":91,"endColumn":44},{"ruleId":"413","severity":1,"message":"414","line":91,"column":61,"nodeType":"415","messageId":"416","endLine":91,"endColumn":63},{"ruleId":"413","severity":1,"message":"414","line":100,"column":35,"nodeType":"415","messageId":"416","endLine":100,"endColumn":37},{"ruleId":"413","severity":1,"message":"414","line":103,"column":35,"nodeType":"415","messageId":"416","endLine":103,"endColumn":37},{"ruleId":"413","severity":1,"message":"414","line":126,"column":61,"nodeType":"415","messageId":"416","endLine":126,"endColumn":63},"no-native-reassign",["447"],"no-negated-in-lhs",["448"],"no-unused-vars","'IncluirCadastroDiploma' is defined but never used.","Identifier","unusedVar","'LoginCreate' is defined but never used.","'Button' is defined but never used.","'email' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'handleAlertSucess' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Link' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'MdAdd' is defined but never used.","'MdRemove' is defined but never used.","'Dropdown' is defined but never used.","'useEffect' is defined but never used.","'GrDocumentTransfer' is defined but never used.","'Alert' is defined but never used.","'Acordeao' is defined but never used.","'useNavigate' is defined but never used.","'Burger' is defined but never used.","'courseCode' is assigned a value but never used.","'setCourseCode' is assigned a value but never used.","'type' is assigned a value but never used.","'showAlertSucessInclude' is assigned a value but never used.","'setShowAlertSucessInclude' is assigned a value but never used.","'showAlertErrorInclude' is assigned a value but never used.","'setShowAlertErrorInclude' is assigned a value but never used.","'handleTable' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Table' is defined but never used.","'Modal' is defined but never used.","'FaGenderless' is defined but never used.","'Checkbox' is defined but never used.","'dados' is assigned a value but never used.","'setDados' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'Col' is defined but never used.","'showAlert' is assigned a value but never used.","'setShowAlert' is assigned a value but never used.","'setNoRecord' is assigned a value but never used.","'seLoading' is assigned a value but never used.","'show' is assigned a value but never used.","'showExcluir' is assigned a value but never used.","'setShowExcluir' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'nativeTouchData' is defined but never used.","'nameMother' is assigned a value but never used.","'nationality' is assigned a value but never used.","'setNationality' is assigned a value but never used.","'sheetNumber' is assigned a value but never used.","'setSheetNumber' is assigned a value but never used.","'note' is assigned a value but never used.","'numberQualifications' is assigned a value but never used.","'qualifications' is assigned a value but never used.","'setQualifications' is assigned a value but never used.","'navigate' is assigned a value but never used.","'handleInclude' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]